{
    "project": {
        "name": "Fancy Product Designer - jQuery plugin | Documentation",
        "description": "The HTML5 Product Designer plugin.",
        "version": "5.2.9",
        "url": "http://fancyproductdesigner.com",
        "logo": "http://assets.fancyproductdesigner.com/logo_icon.png"
    },
    "files": {
        "src/js/addons/plus/BulkVariations.js": {
            "name": "src/js/addons/plus/BulkVariations.js",
            "modules": {},
            "classes": {
                "FPDBulkVariations": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/addons/plus/DynamicViews.js": {
            "name": "src/js/addons/plus/DynamicViews.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/modules/LayoutsModule.js": {
            "name": "src/js/modules/LayoutsModule.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/ui/MainBar.js": {
            "name": "src/js/ui/MainBar.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/FabricPrototypes.js": {
            "name": "src/js/FabricPrototypes.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/js/FancyProductDesigner.js": {
            "name": "src/js/FancyProductDesigner.js",
            "modules": {},
            "classes": {
                "FancyProductDesigner": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/FancyProductDesignerView.js": {
            "name": "src/js/FancyProductDesignerView.js",
            "modules": {},
            "classes": {
                "FancyProductDesignerView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/Options.js": {
            "name": "src/js/Options.js",
            "modules": {},
            "classes": {
                "Options": 1
            },
            "fors": {
                "Options": 1,
                "Options.defaults": 1,
                "Options.defaults.customImageAjaxSettings": 1,
                "Options.defaults.imageEditorSettings": 1,
                "Options.defaults.dynamicViewsOptions": 1,
                "Options.defaults.elementParameters": 1,
                "Options.defaults.textParameters": 1,
                "Options.defaults.imageParameters": 1,
                "Options.defaults.customImageParameters": 1,
                "Options.defaults.customAdds": 1,
                "Options.defaults.qrCodeProps": 1
            },
            "namespaces": {}
        },
        "src/js/Util.js": {
            "name": "src/js/Util.js",
            "modules": {},
            "classes": {
                "FPDUtil": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "FPDBulkVariations": {
            "name": "FPDBulkVariations",
            "shortname": "FPDBulkVariations",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/js/addons/plus/BulkVariations.js",
            "line": 1,
            "description": "<strong>This is part of the PLUS add-on.</strong><br>\nThe class to create the Bulk Variations that is related to FancyProductDesigner class.\n<h5>Example</h5><pre>fpdInstance.bulkVariations.getOrderVariations();</pre>\nBut you can just use the getOrder() method of FancyProductDesigner class, this will also include the order variations object. <pre>fpdInstance.getOrder();</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "fpdInstance",
                    "description": "- An instance of FancyProductDesigner class.",
                    "type": "FancyProductDesigner"
                }
            ]
        },
        "FancyProductDesigner": {
            "name": "FancyProductDesigner",
            "shortname": "FancyProductDesigner",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/js/FancyProductDesigner.js",
            "line": 1,
            "description": "This is the main entry point to access FPD via the API. FancyProductDesigner class contains the instances of {{#crossLink \"FancyProductDesignerView\"}}FancyProductDesignerView{{/crossLink}} class.\n\n<h5>Example</h5>\nBest practice to use the API is to wait for the ready event, then the UI and all products/designs has been set (not loaded).<pre>var fpd = new FancyProductDesigner($fpd, options);\n$fpd.on('ready', function() { //use api methods in here })</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "elem",
                    "description": "- A HTML element with an unique ID.",
                    "type": "HTMLElement | jQuery"
                },
                {
                    "name": "opts",
                    "description": "- See {{#crossLink \"Options.defaults\"}}{{/crossLink}}.",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "FancyProductDesignerView": {
            "name": "FancyProductDesignerView",
            "shortname": "FancyProductDesignerView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/js/FancyProductDesignerView.js",
            "line": 1,
            "description": "The class to create a view. A view contains the canvas. You need to call {{#crossLink \"FancyProductDesignerView/setup:method\"}}{{/crossLink}} to set up the canvas with all elements, after setting an instance of {{#crossLink \"FancyProductDesignerView\"}}{{/crossLink}}.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "elem",
                    "description": "- jQuery object holding the container.",
                    "type": "JQuery"
                },
                {
                    "name": "view",
                    "description": "- The default options for the view.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "- This function will be called as soon as the view and all initial elements are loaded.",
                    "type": "Function"
                },
                {
                    "name": "fabricjsCanvasOptions",
                    "description": "- Options for the fabricjs canvas.",
                    "type": "Object"
                }
            ]
        },
        "Options": {
            "name": "Options",
            "shortname": "Options",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/js/Options.js",
            "line": 1,
            "description": "The class defining the default options for Fancy Product Designer."
        },
        "Options.defaults": {
            "name": "Options.defaults",
            "shortname": "Options.defaults",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "Options.defaults.customImageAjaxSettings": {
            "name": "Options.defaults.customImageAjaxSettings",
            "shortname": "Options.defaults.customImageAjaxSettings",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "Options.defaults.imageEditorSettings": {
            "name": "Options.defaults.imageEditorSettings",
            "shortname": "Options.defaults.imageEditorSettings",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "Options.defaults.dynamicViewsOptions": {
            "name": "Options.defaults.dynamicViewsOptions",
            "shortname": "Options.defaults.dynamicViewsOptions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "Options.defaults.elementParameters": {
            "name": "Options.defaults.elementParameters",
            "shortname": "Options.defaults.elementParameters",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "Options.defaults.textParameters": {
            "name": "Options.defaults.textParameters",
            "shortname": "Options.defaults.textParameters",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "Options.defaults.imageParameters": {
            "name": "Options.defaults.imageParameters",
            "shortname": "Options.defaults.imageParameters",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "Options.defaults.customImageParameters": {
            "name": "Options.defaults.customImageParameters",
            "shortname": "Options.defaults.customImageParameters",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "Options.defaults.customAdds": {
            "name": "Options.defaults.customAdds",
            "shortname": "Options.defaults.customAdds",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "Options.defaults.qrCodeProps": {
            "name": "Options.defaults.qrCodeProps",
            "shortname": "Options.defaults.qrCodeProps",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "FPDUtil": {
            "name": "FPDUtil",
            "shortname": "FPDUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/js/Util.js",
            "line": 3,
            "description": "A class with some static helper functions. You do not need to initiate the class, just call the methods directly, e.g. FPDUtil.isIE();"
        }
    },
    "classitems": [
        {
            "file": "src/js/addons/plus/BulkVariations.js",
            "line": 23,
            "description": "Gets the variation(s) from the UI.",
            "itemtype": "method",
            "name": "getOrderVariations",
            "return": {
                "description": "An array containing objects with variation and quantity properties. If a variation in the UI is not set, it will return false.",
                "type": "Array|Boolean"
            },
            "class": "FPDBulkVariations"
        },
        {
            "file": "src/js/addons/plus/BulkVariations.js",
            "line": 60,
            "description": "Loads variation(s) in the UI.",
            "itemtype": "method",
            "name": "setup",
            "params": [
                {
                    "name": "variations",
                    "description": "An array containing objects with variation and quantity properties.",
                    "type": "Array"
                }
            ],
            "class": "FPDBulkVariations"
        },
        {
            "file": "src/js/addons/plus/DynamicViews.js",
            "line": 369,
            "description": "Gets fired when the size of a view is changed via the Dynamic Views module.",
            "itemtype": "event",
            "name": "FancyProductDesigner#viewSizeChange",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "currentViewInstance",
                    "description": "- The current view instance.",
                    "type": "String"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/modules/LayoutsModule.js",
            "line": 86,
            "description": "Gets fired when a all elements of layout are added.",
            "itemtype": "event",
            "name": "FancyProductDesigner#productAdd",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "elements",
                    "description": "- Added elements.",
                    "type": "Array"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/ui/MainBar.js",
            "line": 178,
            "description": "Gets fired as soon as the list with the layers has been updated. Is fired when a view is selected or an object has been added/removed.",
            "itemtype": "event",
            "name": "FancyProductDesigner#layersListUpdate",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FabricPrototypes.js",
            "line": 277,
            "description": "Returns Snapping to Objects Control Points Point",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "SnappingObject"
                },
                {
                    "name": "objects",
                    "description": "",
                    "type": "Array<SnappingObject>"
                },
                {
                    "name": "tolerance",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "SnapToResult | null"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FabricPrototypes.js",
            "line": 377,
            "description": "Returns Snapping to Objects Bounding Rectangles Point",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "SnappingObject"
                },
                {
                    "name": "objects",
                    "description": "",
                    "type": "Array<SnappingObject>"
                },
                {
                    "name": "tolerance",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "SnapToResult | null"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FabricPrototypes.js",
            "line": 638,
            "description": "generate SnappingObject using in snapping cache",
            "params": [
                {
                    "name": "object",
                    "description": "- FabricJS object",
                    "type": "Array<fabric.Object>"
                }
            ],
            "return": {
                "description": "",
                "type": "SnappingObject"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FabricPrototypes.js",
            "line": 662,
            "description": "Draw Helper lines For Snapping function",
            "params": [
                {
                    "name": "snapResult",
                    "description": "",
                    "type": "SnapToResult"
                },
                {
                    "name": "strokeStyle",
                    "description": ""
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FabricPrototypes.js",
            "line": 708,
            "description": "Correct Object moving on \"object:moving\" event",
            "params": [
                {
                    "name": "options",
                    "description": "-",
                    "type": "Object",
                    "props": [
                        {
                            "name": "target",
                            "description": "- moving object",
                            "type": "fabric.Object"
                        },
                        {
                            "name": "guidlines",
                            "description": "- other guidlines",
                            "type": "Array<SnappingObject>"
                        },
                        {
                            "name": "objects",
                            "description": "- other objects",
                            "type": "Array<fabric.Object>"
                        },
                        {
                            "name": "grid",
                            "description": "-",
                            "type": "GridOptions"
                        },
                        {
                            "name": "tolerance",
                            "description": "-",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "SnapToResult | null"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FabricPrototypes.js",
            "line": 813,
            "params": [
                {
                    "name": "object",
                    "description": ""
                }
            ],
            "return": {
                "description": "|{value, corner, object2, corner2}), y: (false|{value, corner}|{value, corner, object2, corner2})}}",
                "type": "X: (false|value, corner"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FabricPrototypes.js",
            "line": 961,
            "description": "modified to use with `offsetCorner` property",
            "params": [
                {
                    "name": "absolute",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "{tl: *|fabric.Point, tr: *|fabric.Point, br: *|fabric.Point, bl: *|fabric.Point"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FabricPrototypes.js",
            "line": 1079,
            "description": "Sets the coordinates of the draggable boxes in the corners of\nthe image used to scale/rotate it.\nEdited : modified to use with `offsetCorner` property",
            "access": "private",
            "tagname": "",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FabricPrototypes.js",
            "line": 1159,
            "description": "modified to use with `offsetCorner` property",
            "params": [
                {
                    "name": "control",
                    "description": ""
                },
                {
                    "name": "ctx",
                    "description": ""
                },
                {
                    "name": "methodName",
                    "description": ""
                },
                {
                    "name": "left",
                    "description": ""
                },
                {
                    "name": "top",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 40,
            "description": "Array containing all added products categorized.",
            "itemtype": "property",
            "name": "products",
            "type": "Array",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 48,
            "description": "Array containing all added designs.",
            "itemtype": "property",
            "name": "designs",
            "type": "Array",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 56,
            "description": "The current selected product category index.",
            "itemtype": "property",
            "name": "currentCategoryIndex",
            "type": "Number",
            "default": "0",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 65,
            "description": "The current selected product index.",
            "itemtype": "property",
            "name": "currentProductIndex",
            "type": "Number",
            "default": "0",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 74,
            "description": "The current selected view index.",
            "itemtype": "property",
            "name": "currentViewIndex",
            "type": "Number",
            "default": "0",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 83,
            "description": "The price considering the elements price in all views with order quantity.",
            "itemtype": "property",
            "name": "currentPrice",
            "type": "Number",
            "default": "0",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 92,
            "description": "The price considering the elements price in all views without order quantity.",
            "itemtype": "property",
            "name": "singleProductPrice",
            "type": "Number",
            "default": "0",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 101,
            "description": "The current views.",
            "itemtype": "property",
            "name": "currentViews",
            "type": "Array",
            "default": "null",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 110,
            "description": "The current view instance.",
            "itemtype": "property",
            "name": "currentViewInstance",
            "type": "FancyProductDesignerView",
            "default": "null",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 119,
            "description": "The current selected element.",
            "itemtype": "property",
            "name": "currentElement",
            "type": "fabric.Object",
            "default": "null",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 128,
            "description": "JSON Object containing all translations.",
            "itemtype": "property",
            "name": "langJson",
            "type": "Object",
            "default": "null",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 137,
            "description": "The main options set for this Product Designer.",
            "itemtype": "property",
            "name": "mainOptions",
            "type": "Object",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 145,
            "description": "jQuery object pointing on the product stage.",
            "itemtype": "property",
            "name": "$productStage",
            "type": "jQuery",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 153,
            "description": "jQuery object pointing on the tooltip for the current selected element.",
            "itemtype": "property",
            "name": "$elementTooltip",
            "type": "jQuery",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 161,
            "description": "URL to the watermark image if one is set via options.",
            "itemtype": "property",
            "name": "watermarkImg",
            "type": "String",
            "default": "null",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 170,
            "description": "Indicates if the product is created or not.",
            "itemtype": "property",
            "name": "productCreated",
            "type": "Boolean",
            "default": "false",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 179,
            "description": "Indicates if the product was saved.",
            "itemtype": "property",
            "name": "doUnsavedAlert",
            "type": "Boolean",
            "default": "false",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 188,
            "description": "Array containing all FancyProductDesignerView instances of the current showing product.",
            "itemtype": "property",
            "name": "viewInstances",
            "type": "Array",
            "default": "[]",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 197,
            "description": "Object containing all color link groups.",
            "itemtype": "property",
            "name": "colorLinkGroups",
            "type": "Object",
            "default": "{}",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 206,
            "description": "The order quantity.",
            "itemtype": "property",
            "name": "orderQuantity",
            "type": "Number",
            "default": "1",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 215,
            "description": "If FPDBulkVariations is used with the product designer, this is the instance to the FPDBulkVariations class.",
            "itemtype": "property",
            "name": "bulkVariations",
            "type": "FPDBulkVariations",
            "default": "null",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 224,
            "description": "The calculated price for the pricing rules.",
            "itemtype": "property",
            "name": "pricingRulesPrice",
            "type": "Number",
            "default": "0",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 233,
            "description": "The container for internal modals.",
            "itemtype": "property",
            "name": "$modalContainer",
            "type": "jQuery",
            "default": "0",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 242,
            "description": "Array will all added custom elements.",
            "itemtype": "property",
            "name": "globalCustomElements",
            "type": "Array",
            "default": "[]",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 251,
            "description": "Array will all fixed elements.",
            "itemtype": "property",
            "name": "fixedElements",
            "type": "Array",
            "default": "[]",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 260,
            "description": "Returns if mouse is over a fabricJS canvas and in which case the fabricJS object.",
            "itemtype": "property",
            "name": "mouseOverCanvas",
            "type": "Boolean",
            "default": "false",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 397,
            "description": "Gets fired when the modal with the product designer opens.",
            "itemtype": "event",
            "name": "FancyProductDesigner#modalDesignerOpen",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 411,
            "description": "Gets fired when the modal with the product designer closes.",
            "itemtype": "event",
            "name": "FancyProductDesigner#modalDesignerClose",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 437,
            "description": "Gets fired when the browser does not support HTML5 canvas.",
            "itemtype": "event",
            "name": "FancyProductDesigner#canvasFail",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 512,
            "description": "Gets fired when the language JSON is loaded.",
            "itemtype": "event",
            "name": "FancyProductDesigner#langJSONLoad",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "langJSON",
                    "description": "- A JSON containing the translation.",
                    "type": "Object"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 673,
            "description": "Gets fired as soon as the screen size has changed. Breakpoints: Smartphone Width < 568, Tablet Width > 568 and < 768, Desktop Width > 768.",
            "itemtype": "event",
            "name": "FancyProductDesigner#canvasFail",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "device",
                    "description": "Possible values: desktop, tablet, smartphone.",
                    "type": "String"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 703,
            "description": "Gets fired as soon as a template has been loaded.",
            "itemtype": "event",
            "name": "FancyProductDesigner#templateLoad",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "URL",
                    "description": "- The URL of the loaded template.",
                    "type": "String"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 769,
            "description": "Gets fired as soon as the user interface with all modules, actions is set and translated.",
            "itemtype": "event",
            "name": "FancyProductDesigner#uiSet",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 1552,
            "description": "Gets fired as soon as the product designer is ready to receive API calls.",
            "itemtype": "event",
            "name": "FancyProductDesigner#ready",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 1891,
            "description": "Gets fired as soon as a product has been fully added to the designer.",
            "itemtype": "event",
            "name": "FancyProductDesigner#productCreate",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "currentViews",
                    "description": "- An array containing all views of the product.",
                    "type": "Array"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2139,
            "description": "Adds a new product to the product designer.",
            "itemtype": "method",
            "name": "addProduct",
            "params": [
                {
                    "name": "views",
                    "description": "An array containing the views for a product. A view is an object with a title, thumbnail and elements property. The elements property is an array containing one or more objects with source, title, parameters and type.",
                    "type": "Array"
                },
                {
                    "name": "category",
                    "description": "If categories are used, you need to define the category title.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2170,
            "description": "Gets fired when a product is added.",
            "itemtype": "event",
            "name": "FancyProductDesigner#productAdd",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "views",
                    "description": "- The product views.",
                    "type": "Array"
                },
                {
                    "name": "category",
                    "description": "- The category title.",
                    "type": "String"
                },
                {
                    "name": "catIndex",
                    "description": "- The index of the category.",
                    "type": "Number"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2183,
            "description": "Selects a product by index and category index.",
            "itemtype": "method",
            "name": "selectProduct",
            "params": [
                {
                    "name": "index",
                    "description": "The requested product by an index value. 0 will load the first product.",
                    "type": "Number"
                },
                {
                    "name": "categoryIndex",
                    "description": "The requested category by an index value. 0 will load the first category.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "example": [
                " fpd.selectProduct( 1, 2 ); //will load the second product from the third category"
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2210,
            "description": "Gets fired when a product is selected.",
            "itemtype": "event",
            "name": "FancyProductDesigner#productSelect",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "index",
                    "description": "- The index of the product in the category.",
                    "type": "Number"
                },
                {
                    "name": "categoryIndex",
                    "description": "- The index of the category.",
                    "type": "Number"
                },
                {
                    "name": "product",
                    "description": "- An object containing the product (views).",
                    "type": "Object"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2225,
            "description": "Loads a new product to the product designer.",
            "itemtype": "method",
            "name": "loadProduct",
            "params": [
                {
                    "name": "views",
                    "description": "An array containing the views for the product.",
                    "type": "Array"
                },
                {
                    "name": "onlyReplaceInitialElements",
                    "description": "If true, the initial elements will be replaced. Custom added elements will stay on the canvas.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "mergeMainOptions",
                    "description": "Merges the main options into every view options.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2303,
            "description": "Adds a view to the current visible product.",
            "itemtype": "method",
            "name": "addView",
            "params": [
                {
                    "name": "view",
                    "description": "An object with title, thumbnail and elements properties.",
                    "type": "Object"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2351,
            "description": "Gets fired when a view is created.",
            "itemtype": "event",
            "name": "FancyProductDesigner#viewCreate",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "viewInstance",
                    "description": "",
                    "type": "FancyProductDesignerView"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2455,
            "description": "Gets fired when an element is added.",
            "itemtype": "event",
            "name": "FancyProductDesigner#elementAdd",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "element",
                    "description": "",
                    "type": "fabric.Object"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2469,
            "description": "Gets fired as soon as the bounding box is added to or removed from the stage.",
            "itemtype": "event",
            "name": "FancyProductDesigner#boundingBoxToggle",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "currentBoundingObject",
                    "description": "- A fabricJS rectangle representing the bounding box.",
                    "type": "fabric.Object"
                },
                {
                    "name": "addRemove",
                    "description": "- True=added, false=removed.",
                    "type": "Boolean"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2496,
            "description": "Gets fired when an element is selected.",
            "itemtype": "event",
            "name": "FancyProductDesigner#elementSelect",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "element",
                    "description": "",
                    "type": "fabric.Object"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2511,
            "description": "Gets fired when an element is changed.",
            "itemtype": "event",
            "name": "FancyProductDesigner#elementChange",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "element",
                    "description": "",
                    "type": "fabric.Object"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2525,
            "description": "Gets fired when an element is modified.",
            "itemtype": "event",
            "name": "FancyProductDesigner#elementModify",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "element",
                    "description": "",
                    "type": "fabric.Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2535,
            "description": "Gets fired when an element is modified.",
            "itemtype": "event",
            "name": "FancyProductDesigner#viewCanvasUpdate",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "viewInstance",
                    "description": "",
                    "type": "FancyProductDesignerView"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2550,
            "description": "Gets fired when an undo or redo state is set.",
            "itemtype": "event",
            "name": "FancyProductDesigner#undoRedoSet",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "undos",
                    "description": "- Array containing all undo objects.",
                    "type": "Array"
                },
                {
                    "name": "redos",
                    "description": "- Array containing all redo objects.",
                    "type": "Array"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2565,
            "description": "Gets fired as soon as the price changes in a view.",
            "itemtype": "event",
            "name": "FancyProductDesigner#priceChange",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "elementPrice",
                    "description": "- The price of the element.",
                    "type": "Number"
                },
                {
                    "name": "totalPrice",
                    "description": "- The true price of all views with quantity.",
                    "type": "Number"
                },
                {
                    "name": "singleProductPrice",
                    "description": "- The true price of all views without quantity.",
                    "type": "Number"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2607,
            "description": "Gets fired when the color of an element is changed.",
            "itemtype": "event",
            "name": "FancyProductDesigner#elementColorChange",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "element",
                    "description": "",
                    "type": "fabric.Object"
                },
                {
                    "name": "hex",
                    "description": "Hexadecimal color string.",
                    "type": "String"
                },
                {
                    "name": "colorLinking",
                    "description": "Color of element is linked to other colors.",
                    "type": "Boolean"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2631,
            "description": "Gets fired as soon as an element has been removed.",
            "itemtype": "event",
            "name": "FancyProductDesigner#elementRemove",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "element",
                    "description": "- The fabric object that has been removed.",
                    "type": "fabric.Object"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2664,
            "description": "Selects a view from the current visible views.",
            "itemtype": "method",
            "name": "selectView",
            "params": [
                {
                    "name": "index",
                    "description": "The requested view by an index value. 0 will load the first view.",
                    "type": "Number"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2785,
            "description": "Gets fired as soon as a view has been selected.",
            "itemtype": "event",
            "name": "FancyProductDesigner#viewSelect",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "viewIndex",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "viewInstance",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2797,
            "description": "Adds a new element to the product designer.",
            "itemtype": "method",
            "name": "addElement",
            "params": [
                {
                    "name": "type",
                    "description": "The type of an element you would like to add, 'image' or 'text'.",
                    "type": "String"
                },
                {
                    "name": "source",
                    "description": "For image the URL to the image and for text elements the default text.",
                    "type": "String"
                },
                {
                    "name": "title",
                    "description": "Only required for image elements.",
                    "type": "String"
                },
                {
                    "name": "parameters",
                    "description": "An object with the parameters, you would like to apply on the element.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                },
                {
                    "name": "viewIndex",
                    "description": "The index of the view where the element needs to be added to. If no index is set, it will be added to current showing view.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2832,
            "description": "Sets the parameters for a specified element.",
            "itemtype": "method",
            "name": "setElementParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "An object with the parameters that should be applied to the element.",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "A fabric object or the title of an element. If not set, the current selected element is used.",
                    "type": "fabric.Object | string",
                    "optional": true
                },
                {
                    "name": "viewIndex",
                    "description": "The index of the view you would like target. If not set, the current showing view will be used.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2853,
            "description": "Clears the product stage and resets everything.",
            "itemtype": "method",
            "name": "reset",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2878,
            "description": "Gets fired as soon as the stage has been cleared.",
            "itemtype": "event",
            "name": "FancyProductDesigner#clear",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2890,
            "description": "Deselects the selected element of the current showing view.",
            "itemtype": "method",
            "name": "deselectElement",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2905,
            "description": "Creates all views in one data URL. The different views will be positioned below each other.",
            "itemtype": "method",
            "name": "getProductDataURL",
            "params": [
                {
                    "name": "callback",
                    "description": "A function that will be called when the data URL is created. The function receives the data URL.",
                    "type": "Function"
                },
                {
                    "name": "backgroundColor",
                    "description": "The background color as hexadecimal value. For 'png' you can also use 'transparent'.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "transparent"
                },
                {
                    "name": "options",
                    "description": "See fabricjs documentation http://fabricjs.com/docs/fabric.Canvas.html#toDataURL.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "onlyExportable",
                            "description": "If true elements with excludeFromExport=true are not exported in the image.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "viewRange",
                    "description": "An array defining the start and the end indexes of the exported views.",
                    "type": "Array"
                }
            ],
            "example": [
                " fpd.getProductDataURL( function(dataURL){} );"
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 2996,
            "description": "Gets the views as data URL.",
            "itemtype": "method",
            "name": "getViewsDataURL",
            "params": [
                {
                    "name": "callback",
                    "description": "A function that will be called when the data URL is created. The function receives the data URL.",
                    "type": "Function"
                },
                {
                    "name": "backgroundColor",
                    "description": "The background color as hexadecimal value. For 'png' you can also use 'transparent'.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "transparent"
                },
                {
                    "name": "options",
                    "description": "See fabricjs documentation http://fabricjs.com/docs/fabric.Canvas.html#toDataURL.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "onlyExportable",
                            "description": "If true elements with excludeFromExport=true are not exported in the image.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "An array with all views as data URLs.",
                "type": "Array"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3031,
            "description": "Returns the views as SVG.",
            "itemtype": "method",
            "name": "getViewsSVG",
            "params": [
                {
                    "name": "options",
                    "description": "See http://fabricjs.com/docs/fabric.StaticCanvas.html#toSVG.",
                    "type": "Object"
                },
                {
                    "name": "reviver",
                    "description": "See http://fabricjs.com/docs/fabric.StaticCanvas.html#toSVG.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "An array with all views as SVG.",
                "type": "Array"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3051,
            "description": "Shows or hides the spinner with an optional message.",
            "itemtype": "method",
            "name": "toggleSpinner",
            "params": [
                {
                    "name": "state",
                    "description": "The state can be \"show\" or \"hide\".",
                    "type": "String"
                },
                {
                    "name": "msg",
                    "description": "The message that will be displayed underneath the spinner.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "$stageLoader jQuery object containing the stage loader.",
                "type": "JQuery"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3079,
            "description": "Returns an fabric object by title.",
            "itemtype": "method",
            "name": "getElementByTitle",
            "params": [
                {
                    "name": "title",
                    "description": "The title of an element.",
                    "type": "String"
                },
                {
                    "name": "viewIndex",
                    "description": "The index of the target view. By default all views are scanned.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "-1"
                }
            ],
            "return": {
                "description": "FabricJS Object.",
                "type": "fabric.Object"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3105,
            "description": "Returns an array with fabricjs objects.",
            "itemtype": "method",
            "name": "getElements",
            "params": [
                {
                    "name": "viewIndex",
                    "description": "The index of the target view. By default all views are target.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "-1"
                },
                {
                    "name": "elementType",
                    "description": "The type of elements to return. By default all types are returned. Possible values: text, image.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'all'"
                },
                {
                    "name": "deselectElement",
                    "description": "Deselect current selected element.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "An array containg the elements.",
                "type": "Array"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3181,
            "description": "Opens the current showing product in a Pop-up window and shows the print dialog.",
            "itemtype": "method",
            "name": "print",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3229,
            "description": "Creates an image of the current showing product.",
            "itemtype": "method",
            "name": "createImage",
            "params": [
                {
                    "name": "openInBlankPage",
                    "description": "Opens the image in a Pop-up window.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": " true"
                },
                {
                    "name": "forceDownload",
                    "description": "Downloads the image to the user's computer.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "backgroundColor",
                    "description": "The background color as hexadecimal value. For 'png' you can also use 'transparent'.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "transparent"
                },
                {
                    "name": "options",
                    "description": "See fabricjs documentation http://fabricjs.com/docs/fabric.Canvas.html#toDataURL.",
                    "type": "String",
                    "optional": true,
                    "props": [
                        {
                            "name": "onlyExportable",
                            "description": "If true elements with excludeFromExport=true are not exported in the image.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "onlyCurrentView",
                    "description": "If true only the curent showing view will be exported.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3279,
            "description": "Sets the zoom of the stage. 1 is equal to no zoom.",
            "itemtype": "method",
            "name": "setZoom",
            "params": [
                {
                    "name": "value",
                    "description": "The zoom value.",
                    "type": "Number"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3312,
            "description": "Resets the zoom.",
            "itemtype": "method",
            "name": "resetZoom",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3333,
            "description": "Get an elment by ID.",
            "itemtype": "method",
            "name": "getElementByID",
            "params": [
                {
                    "name": "id",
                    "description": "The id of an element.",
                    "type": "Number"
                },
                {
                    "name": "viewIndex",
                    "description": "The view index you want to search in. If no index is set, it will use the current showing view.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3348,
            "description": "Returns the current showing product with all views and elements in the views.",
            "itemtype": "method",
            "name": "getProduct",
            "params": [
                {
                    "name": "onlyEditableElements",
                    "description": "If true, only the editable elements will be returned.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "customizationRequired",
                    "description": "To receive the product the user needs to customize the initial elements.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "An array with all views. A view is an object containing the title, thumbnail, custom options and elements. An element object contains the title, source, parameters and type.",
                "type": "Array"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3468,
            "description": "Get the translation of a label.",
            "itemtype": "method",
            "name": "getTranslation",
            "params": [
                {
                    "name": "section",
                    "description": "The section key you want - toolbar, actions, modules or misc.",
                    "type": "String"
                },
                {
                    "name": "label",
                    "description": "The label key.",
                    "type": "String"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3493,
            "description": "Returns an array with all custom added elements.",
            "itemtype": "method",
            "name": "getCustomElements",
            "params": [
                {
                    "name": "type",
                    "description": "The type of elements. Possible values: 'all', 'image', 'text'.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'all'"
                },
                {
                    "name": "viewIndex",
                    "description": "The index of the target view. By default all views are target.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "-1"
                },
                {
                    "name": "deselectElement",
                    "description": "Deselect current selected element.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "An array with objects with the fabric object and the view index.",
                "type": "Array"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3522,
            "description": "Returns an array with all fixed elements.",
            "itemtype": "method",
            "name": "getFixedElements",
            "params": [
                {
                    "name": "type",
                    "description": "The type of elements. Possible values: 'all', 'image', 'text'.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'all'"
                },
                {
                    "name": "viewIndex",
                    "description": "The index of the target view. By default all views are target.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "-1"
                },
                {
                    "name": "deselectElement",
                    "description": "Deselect current selected element.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "An array with objects with the fabric object and the view index.",
                "type": "Array"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3551,
            "description": "Adds a new custom image to the product stage. This method should be used if you are using an own image uploader for the product designer. The customImageParameters option will be applied on the images that are added via this method.",
            "itemtype": "method",
            "name": "addCustomImage",
            "params": [
                {
                    "name": "source",
                    "description": "The URL of the image.",
                    "type": "String"
                },
                {
                    "name": "title",
                    "description": "The title for the design.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Additional options.",
                    "type": "Object"
                },
                {
                    "name": "viewIndex",
                    "description": "The index of the view where the element needs to be added to. If no index is set, it will be added to current showing view.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3615,
            "description": "Sets the dimensions of all views.",
            "itemtype": "method",
            "name": "setDimensions",
            "params": [
                {
                    "name": "width",
                    "description": "The width in pixel.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height in pixel.",
                    "type": "Number"
                },
                {
                    "name": "viewIndex",
                    "description": "The target views. -1 targets all views.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "-1"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3661,
            "description": "Sets the order quantity.",
            "itemtype": "method",
            "name": "setOrderQuantity",
            "params": [
                {
                    "name": "quantity",
                    "description": "The width in pixel.",
                    "type": "Number"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3678,
            "description": "Returns an order object containing the product from the getProduct() method. If using plus add-on and bulk variations, the variations will be added into the object.",
            "itemtype": "method",
            "name": "getOrder",
            "params": [
                {
                    "name": "options",
                    "description": "Options for the methods that are called inside this mehtod, e.g. getProduct() can receive two parameters.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "return": {
                "description": "An object containing different objects representing important order data.",
                "type": "Object"
            },
            "example": [
                "\n// includes only editable elements and the user needs to customize the initial product\nfpd.getOrder( {onlyEditableElements: true, customizationRequired: true} );"
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3720,
            "description": "Get all fonts used in the product.",
            "itemtype": "method",
            "name": "getUsedFonts",
            "return": {
                "description": "An array with objects containing the font name and optional the URL to the font.",
                "type": "Array"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3762,
            "description": "Get all used colors from a single or all views.",
            "itemtype": "method",
            "name": "getUsedColors",
            "params": [
                {
                    "name": "viewIndex",
                    "description": "The index of the target view. By default all views are target.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "-1"
                }
            ],
            "return": {
                "description": "An array with hexdecimal color values.",
                "type": "Array"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3807,
            "description": "Calculates the total price considering the elements price in all views and pricing rules.",
            "itemtype": "method",
            "name": "calculatePrice",
            "params": [
                {
                    "name": "considerQuantity",
                    "description": "Calculate with or without quantity.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "The calculated price.",
                "type": "Number"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3838,
            "description": "Removes a view by its index value.",
            "itemtype": "method",
            "name": "removeView",
            "params": [
                {
                    "name": "viewIndex",
                    "description": "The index of the target view.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3860,
            "description": "Gets fired when a view is removed.",
            "itemtype": "event",
            "name": "FancyProductDesigner#viewRemove",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "viewIndex",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3871,
            "description": "Gets fired as soon as the price changes in a view.",
            "itemtype": "event",
            "name": "FancyProductDesigner#priceChange",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "elementPrice",
                    "description": "- The price of the element.",
                    "type": "Number"
                },
                {
                    "name": "totalPrice",
                    "description": "- The true price of all views with quantity.",
                    "type": "Number"
                },
                {
                    "name": "singleProductPrice",
                    "description": "- The true price of all views without quantity.",
                    "type": "Number"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 3884,
            "description": "Formats the price to a string with the currency and the decimal as well as the thousand separator.",
            "itemtype": "method",
            "name": "formatPrice",
            "params": [
                {
                    "name": "price",
                    "description": "The price thats gonna be formatted.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The formatted price string.",
                "type": "String"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 4078,
            "description": "Set up the products with a JSON.",
            "itemtype": "method",
            "name": "setupProducts",
            "params": [
                {
                    "name": "products",
                    "description": "An array containg the products or categories with products.",
                    "type": "Array"
                }
            ],
            "example": [
                " [{\n\t \"category\": \"Category Title\", \"products\":\n\t \t[{\"productTitle\": \"TITLE OF PRODUCT\", \"productThumbnail\": \"THUMBNAIL OF PRODUCT\" \"title\": \"TITLE OF VIEW\", \"thumbnail\": \"THUMBNAIL OF VIEW\", \"OPTIONS\": {OBJECT VIEW OPTIONS}, \"ELEMENTS\": [ARRAY OF ELEMENTS]\n\t \t...\n]}"
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 4118,
            "description": "Gets fired as soon as products are set either from the HTML or added as JSON.",
            "itemtype": "event",
            "name": "FancyProductDesigner#productsSet",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "products",
                    "description": "- An array containing the products.",
                    "type": "Array"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 4129,
            "description": "Set up the designs with a JSON.",
            "itemtype": "method",
            "name": "setupDesigns",
            "params": [
                {
                    "name": "designs",
                    "description": "An array containg the categories with designs.",
                    "type": "Array"
                }
            ],
            "example": [
                " [{\n\t \"title\": \"Category Title\", \"thumbnail\": \"Thumbnail of Category\", \"designs\": [ARRAY OF ELEMENTS]},\n\t {\"title\": \"Category Title\", \"thumbnail\": \"Thumbnail of Category\", \"category\": [\n\t \t\t{\"title\": \"Category Child\", \"thumbnail\": \"Thumbnail of Category\", \"designs\": [ARRAY OF ELEMENTS]}\n\t ]}\n]"
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 4145,
            "description": "Gets fired as soon as designs are set either from the HTML or added as JSON.",
            "itemtype": "event",
            "name": "FancyProductDesigner#designsSet",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "designs",
                    "description": "- An array containing the designs.",
                    "type": "Array"
                }
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 4156,
            "description": "Toggle the responsive behavior.",
            "itemtype": "method",
            "name": "toggleResponsive",
            "params": [
                {
                    "name": "toggle",
                    "description": "True or false.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns true or false.",
                "type": "Boolean"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 4182,
            "description": "Get an array with image objects from depositphotos.com that are used in the current showing product.",
            "itemtype": "method",
            "name": "getDepositPhotos",
            "return": {
                "description": "An array containing objects. The object contains the depositphotos media ID and the URL to the image that has been uploaded to the server.",
                "type": "Array"
            },
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 4203,
            "description": "Get an object containing the download link for a media. Whenever you call this method, credits will be taken from your depositphotos account to purchase a media. You can find more infos about the Depositphotos API here: http://api.depositphotos.com/doc/classes/API.Purchase.html",
            "itemtype": "method",
            "name": "getDepositPhotosPurchaseMedia",
            "params": [
                {
                    "name": "callback",
                    "description": "A function that will be called with JSON data has been loaded. Will also be executed on failure.",
                    "type": "Function"
                },
                {
                    "name": "mediaID",
                    "description": "A Depositphotos media ID.",
                    "type": "String"
                },
                {
                    "name": "username",
                    "description": "Your Depositphotos username.",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "Your Depositphotos password.",
                    "type": "String"
                },
                {
                    "name": "size",
                    "description": "Possible values: s/m/l/xl/vect/el0.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "s"
                },
                {
                    "name": "license",
                    "description": "Possible values: standard or extended.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "standard"
                },
                {
                    "name": "purchaseCurrency",
                    "description": "The license. Possible values: 'credits' | 'subscription' | 'bonus' | 'ondemand'.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "credits"
                }
            ],
            "example": [
                "\nfpd.getDepositPhotosPurchaseMedia(function(data) {\n}, '12345', 'username', 'password', 'm')"
            ],
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 4278,
            "description": "Load custom fonts or from Google webfonts  used in the product designer.",
            "itemtype": "method",
            "name": "loadFonts",
            "params": [
                {
                    "name": "fonts",
                    "description": "An array containing objects with name and URL to the font file.",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "A function that will be called when all fonts have been loaded.",
                    "type": "Function"
                }
            ],
            "version": "4.7.6",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesigner.js",
            "line": 4379,
            "description": "Generates an object that will be used for the print-ready export. This objects includes the used fonts and the SVG data strings to generate the PDF.",
            "itemtype": "method",
            "name": "getPrintOrderData",
            "version": "4.7.6",
            "class": "FancyProductDesigner"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 30,
            "description": "The view title.",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 37,
            "description": "The view thumbnail.",
            "itemtype": "property",
            "name": "thumbnail",
            "type": "String",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 44,
            "description": "The view elements.",
            "itemtype": "property",
            "name": "elements",
            "type": "Object",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 51,
            "description": "The view options.",
            "itemtype": "property",
            "name": "options",
            "type": "Object",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 58,
            "description": "The view undos.",
            "itemtype": "property",
            "name": "undos",
            "type": "Array",
            "default": "[]",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 66,
            "description": "The view redos.",
            "itemtype": "property",
            "name": "redos",
            "type": "Array",
            "default": "[]",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 74,
            "description": "The total price for the view without max. price.",
            "itemtype": "property",
            "name": "totalPrice",
            "type": "Number",
            "default": "0",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 82,
            "description": "The total price for the view including max. price and corrert formatting.",
            "itemtype": "property",
            "name": "truePrice",
            "type": "Number",
            "default": "0",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 90,
            "description": "Additional price for the view.",
            "itemtype": "property",
            "name": "additionalPrice",
            "type": "Number",
            "default": "0",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 98,
            "description": "The set zoom for the view.",
            "itemtype": "property",
            "name": "zoom",
            "type": "Number",
            "default": "0",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 106,
            "description": "The responsive scale.",
            "itemtype": "property",
            "name": "responsiveScale",
            "type": "Number",
            "default": "1",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 114,
            "description": "The current selected element.",
            "itemtype": "property",
            "name": "currentElement",
            "type": "fabric.Object",
            "default": "null",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 122,
            "description": "The current selected bounding box object.",
            "itemtype": "property",
            "name": "currentBoundingObject",
            "type": "fabric.Object",
            "default": "null",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 130,
            "description": "The title of the current selected upload zone.",
            "itemtype": "property",
            "name": "currentUploadZone",
            "type": "String",
            "default": "null",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 138,
            "description": "An instance of fabricjs canvas class. <a href=\"http://fabricjs.com/docs/fabric.Canvas.html\" target=\"_blank\">It allows to interact with the fabricjs API.</a>",
            "itemtype": "property",
            "name": "stage",
            "type": "fabric.Canvas",
            "default": "null",
            "deprecated": true,
            "deprecationMessage": "since version 4.7.7, use fCanv instead",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 147,
            "description": "An instance of fabricJS canvas class. <a href=\"http://fabricjs.com/docs/fabric.Canvas.html\" target=\"_blank\">It allows to interact with the fabricjs API.</a>",
            "itemtype": "property",
            "name": "fCanv",
            "type": "fabric.Canvas",
            "default": "null",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 155,
            "description": "The properties for the mask object (url, left, top, width, height).",
            "itemtype": "property",
            "name": "mask",
            "type": "Object",
            "default": "null",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 163,
            "description": "The image object that is going to be used as mask for this view.",
            "itemtype": "property",
            "name": "maskObject",
            "type": "fabric.Image",
            "default": "null",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 171,
            "description": "A fabric.Rect representing the printing box.",
            "itemtype": "property",
            "name": "printingBoxObject",
            "type": "fabric.Rect",
            "default": "null",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 179,
            "description": "The locked state of the view.",
            "itemtype": "property",
            "name": "locked",
            "type": "Boolean",
            "default": "false",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 298,
            "description": "modified to use with `offsetCorner` property",
            "params": [
                {
                    "name": "absolute",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "{tl: *|fabric.Point, tr: *|fabric.Point, br: *|fabric.Point, bl: *|fabric.Point"
            },
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 416,
            "description": "Sets the coordinates of the draggable boxes in the corners of\nthe image used to scale/rotate it.\nEdited : modified to use with `offsetCorner` property",
            "access": "private",
            "tagname": "",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 496,
            "description": "modified to use with `offsetCorner` property",
            "params": [
                {
                    "name": "control",
                    "description": ""
                },
                {
                    "name": "ctx",
                    "description": ""
                },
                {
                    "name": "methodName",
                    "description": ""
                },
                {
                    "name": "left",
                    "description": ""
                },
                {
                    "name": "top",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 717,
            "description": "Gets fired when the mouse gets over on fabricJS canvas.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#canvas:mouseOver",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "instance",
                    "description": "- The view instance.",
                    "type": "String"
                },
                {
                    "name": "opts",
                    "description": "- FabricJS event options.",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 730,
            "description": "Gets fired when the mouse gets over on fabricJS canvas.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#canvas:mouseOut",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "instance",
                    "description": "- The view instance.",
                    "type": "String"
                },
                {
                    "name": "opts",
                    "description": "- FabricJS event options.",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 779,
            "description": "Gets fired when the mouse/touch gets down on fabricJS canvas.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#canvas:mouseDown",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "instance",
                    "description": "- The view instance.",
                    "type": "String"
                },
                {
                    "name": "opts",
                    "description": "- FabricJS event options.",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 796,
            "description": "Gets fired when the mouse/touch gets up on fabricJS canvas.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#canvas:mouseUp",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "instance",
                    "description": "- The view instance.",
                    "type": "String"
                },
                {
                    "name": "opts",
                    "description": "- FabricJS event options.",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 830,
            "description": "Gets fired when the mouse/touch is moving on fabricJS canvas.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#canvas:mouseMove",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "instance",
                    "description": "- The view instance.",
                    "type": "String"
                },
                {
                    "name": "opts",
                    "description": "- FabricJS event options.",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 871,
            "description": "Gets fired when an element is changing via drag, resize or rotate.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#elementChange",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "modifiedType",
                    "description": "- The modified type.",
                    "type": "String"
                },
                {
                    "name": "element",
                    "description": "- The fabricJS object.",
                    "type": "fabric.Object"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 949,
            "description": "Gets fired when an element is modified.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#elementModify",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "element",
                    "description": "- The fabricJS object.",
                    "type": "fabric.Object"
                },
                {
                    "name": "modifiedParameters",
                    "description": "- The modified parameters.",
                    "type": "Object"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 994,
            "description": "Gets fired as soon as an element is selected.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#elementSelect",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "currentElement",
                    "description": "- The current selected element.",
                    "type": "fabric.Object"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 1053,
            "description": "Gets fired when the canvas has been saved in the undos or redos array.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#undoRedoSet",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "undos",
                    "description": "- An array containing all undo objects.",
                    "type": "Array"
                },
                {
                    "name": "redos",
                    "description": "- An array containing all redos objects.",
                    "type": "Array"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 1215,
            "description": "Gets fired when the containment of an element is checked.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#elementCheckContainemt",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "target",
                    "description": "",
                    "type": "fabric.Object"
                },
                {
                    "name": "boundingBoxMode",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 1255,
            "description": "Gets fired as soon as an element is outside of its bounding box.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#elementOut",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 1265,
            "description": "Gets fired as soon as an element is inside of its bounding box again.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#elementIn",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 1550,
            "description": "Adds a new element to the view.",
            "itemtype": "method",
            "name": "addElement",
            "params": [
                {
                    "name": "type",
                    "description": "The type of an element you would like to add, 'image' or 'text'.",
                    "type": "String"
                },
                {
                    "name": "source",
                    "description": "For image the URL to the image and for text elements the default text.",
                    "type": "String"
                },
                {
                    "name": "title",
                    "description": "Only required for image elements.",
                    "type": "String"
                },
                {
                    "name": "parameters",
                    "description": "An object with the parameters, you would like to apply on the element.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 1565,
            "description": "Gets fired as soon as an element has beed added.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#beforeElementAdd",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "type",
                    "description": "- The element type.",
                    "type": "String"
                },
                {
                    "name": "source",
                    "description": "- URL for image, text string for text element.",
                    "type": "String"
                },
                {
                    "name": "title",
                    "description": "- The title for the element.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "- The default properties.",
                    "type": "Object"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 1723,
            "description": "Gets fired as soon as an element has beed added.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#elementAdd",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "object",
                    "description": "- The fabric object.",
                    "type": "fabric.Object"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 1979,
            "description": "Returns an fabric object by title.",
            "itemtype": "method",
            "name": "getElementByTitle",
            "params": [
                {
                    "name": "title",
                    "description": "The title of an element.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "FabricJS Object.",
                "type": "Object"
            },
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 1998,
            "description": "Deselects the current selected element.",
            "itemtype": "method",
            "name": "deselectElement",
            "params": [
                {
                    "name": "discardActiveObject",
                    "description": "Discards the active element.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 2027,
            "description": "Removes an element using the fabric object or the title of an element.",
            "itemtype": "method",
            "name": "removeElement",
            "params": [
                {
                    "name": "element",
                    "description": "Needs to be a fabric object or the title of an element.",
                    "type": "Object|string"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 2059,
            "description": "Gets fired as soon as an element has been removed.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#elementRemove",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "element",
                    "description": "- The fabric object that has been removed.",
                    "type": "fabric.Object"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 2073,
            "description": "Sets the parameters for a specified element.",
            "itemtype": "method",
            "name": "setElementParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "An object with the parameters that should be applied to the element.",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "A fabric object or the title of an element. If no element is set, the parameters will be applied to the current selected element.",
                    "type": "fabric.Object | string",
                    "optional": true
                },
                {
                    "name": "saveUndo",
                    "description": "Save new parameters also in undos.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 2594,
            "description": "Returns the bounding box of an element.",
            "itemtype": "method",
            "name": "getBoundingBoxCoords",
            "params": [
                {
                    "name": "element",
                    "description": "A fabric object",
                    "type": "fabric.Object"
                }
            ],
            "return": {
                "description": "The bounding box object with x,y,width and height or false.",
                "type": "Object | Boolean"
            },
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 2658,
            "description": "Creates a data URL of the view.",
            "itemtype": "method",
            "name": "toDataURL",
            "params": [
                {
                    "name": "callback",
                    "description": "A function that will be called when the data URL is created. The function receives the data URL.",
                    "type": "Function"
                },
                {
                    "name": "backgroundColor",
                    "description": "The background color as hexadecimal value. For 'png' you can also use 'transparent'.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "transparent"
                },
                {
                    "name": "options",
                    "description": "See fabricjs documentation http://fabricjs.com/docs/fabric.Canvas.html#toDataURL.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "onlyExportable",
                            "description": "If true elements with excludeFromExport=true are not exported in the image.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "watermarkImg",
                    "description": "A fabricJS image that includes the watermark image.",
                    "type": "fabric.Image",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "deselectElement",
                    "description": "Deselect current selected element.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 2750,
            "description": "Returns the view as SVG.",
            "itemtype": "method",
            "name": "toSVG",
            "params": [
                {
                    "name": "options",
                    "description": "See fabricjs documentation http://fabricjs.com/docs/fabric.Canvas.html#toSVG",
                    "type": "Object"
                },
                {
                    "name": "reviver",
                    "description": "See fabricjs documentation http://fabricjs.com/docs/fabric.Canvas.html#toSVG",
                    "type": "Function"
                },
                {
                    "name": "respectPrintingBox",
                    "description": "Only generate SVG from printing box",
                    "type": "Boolean"
                },
                {
                    "name": "watermarkImg",
                    "description": "A fabricJS image that includes the watermark image.",
                    "type": "fabric.Image",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "fontsToEmbed",
                    "description": "Aan array containing fonts to embed in the SVG. You can use <a href=\"https://jquerydoc.fancyproductdesigner.com/classes/FancyProductDesigner.html#method_getUsedColors\" target=\"_blank\">getUsedFonts method</a>",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "[]"
                }
            ],
            "return": {
                "description": "A XML representing a SVG.",
                "type": "String"
            },
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 2861,
            "description": "Removes the canvas and resets all relevant view properties.",
            "itemtype": "method",
            "name": "duplicate",
            "params": [
                {
                    "name": "element",
                    "description": "The element to duplicate. If not set, it duplicates the current selected element.",
                    "type": "fabric.Object",
                    "optional": true
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 2889,
            "description": "Removes the canvas and resets all relevant view properties.",
            "itemtype": "method",
            "name": "reset",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 2913,
            "description": "Undo the last change.",
            "itemtype": "method",
            "name": "undo",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 2964,
            "description": "Redo the last change.",
            "itemtype": "method",
            "name": "redo",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3005,
            "description": "Get the canvas(stage) JSON.",
            "itemtype": "method",
            "name": "getJSON",
            "return": {
                "description": "An object with properties.",
                "type": "Object"
            },
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3021,
            "description": "Resizes the canvas responsive.",
            "itemtype": "method",
            "name": "resetCanvasSize",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3080,
            "description": "Gets an elment by replace property.",
            "itemtype": "method",
            "name": "getElementByReplace",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3100,
            "description": "Gets the JSON of an element.",
            "itemtype": "method",
            "name": "getElementJSON",
            "params": [
                {
                    "name": "element",
                    "description": "The target element. If not set, it it will use the current selected.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "addPropertiesToInclude",
                    "description": "Include the properties from {{#crossLink \"FancyProductDesignerView/propertiesToInclude:property\"}}{{/crossLink}}.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "An object with properties.",
                "type": "Object"
            },
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3182,
            "description": "Centers an element horizontal or/and vertical.",
            "itemtype": "method",
            "name": "centerElement",
            "params": [
                {
                    "name": "h",
                    "description": "Center horizontal.",
                    "type": "Boolean"
                },
                {
                    "name": "v",
                    "description": "Center vertical.",
                    "type": "Boolean"
                },
                {
                    "name": "element",
                    "description": "The element to center. If not set, it centers the current selected element.",
                    "type": "fabric.Object",
                    "optional": true
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3199,
            "description": "Aligns an element.",
            "itemtype": "method",
            "name": "alignElement",
            "params": [
                {
                    "name": "pos",
                    "description": "Allowed values: left, right, top or bottom.",
                    "type": "String"
                },
                {
                    "name": "element",
                    "description": "The element to center. If not set, it centers the current selected element.",
                    "type": "fabric.Object",
                    "optional": true
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3251,
            "description": "Gets the z-index of an element.",
            "itemtype": "method",
            "name": "getZIndex",
            "params": [
                {
                    "name": "element",
                    "description": "The element to center. If not set, it centers the current selected element.",
                    "type": "fabric.Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "The index.",
                "type": "Number"
            },
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3266,
            "description": "Changes the color of an element.",
            "itemtype": "method",
            "name": "changeColor",
            "params": [
                {
                    "name": "element",
                    "description": "The element to colorize.",
                    "type": "fabric.Object"
                },
                {
                    "name": "hex",
                    "description": "The color.",
                    "type": "String"
                },
                {
                    "name": "colorLinking",
                    "description": "Use color linking.",
                    "type": "Boolean"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3365,
            "description": "Gets fired when the color of an element is changing.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#elementColorChange",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "element",
                    "description": "",
                    "type": "fabric.Object"
                },
                {
                    "name": "hex",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "colorLinking",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3378,
            "description": "Gets the index of the view.",
            "itemtype": "method",
            "name": "getIndex",
            "return": {
                "description": "The index.",
                "type": "Number"
            },
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3390,
            "description": "Gets an upload zone by title.",
            "itemtype": "method",
            "name": "getUploadZone",
            "params": [
                {
                    "name": "title",
                    "description": "The target title of an element.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A fabric object representing the upload zone.",
                "type": "fabric.Object"
            },
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3412,
            "description": "Changes the price by an operator, + or -.",
            "itemtype": "method",
            "name": "changePrice",
            "params": [
                {
                    "name": "price",
                    "description": "Price as number.",
                    "type": "Number"
                },
                {
                    "name": "operator",
                    "description": "\"+\" or \"-\".",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The total price of the view.",
                "type": "Number"
            },
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3457,
            "description": "Gets fired as soon as the price has changed.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#priceChange",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "elementPrice",
                    "description": "- The price of the added element.",
                    "type": "Number"
                },
                {
                    "name": "truePrice",
                    "description": "- The total price.",
                    "type": "Number"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3471,
            "description": "Use a SVG image as mask for the whole view. The image needs to be a SVG file with only one path. The method toSVG() does not include the mask.",
            "itemtype": "method",
            "name": "setMask",
            "params": [
                {
                    "name": "maskOptions",
                    "description": "An object containing the URL to the svg. Optional: scaleX, scaleY, left and top.",
                    "type": "Object|Null"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3558,
            "description": "Returns all options with the keys that are set in FancyProductDesignerView.relevantOptions property.",
            "itemtype": "method",
            "name": "getOptions",
            "return": {
                "description": "An object containing all relevant options.",
                "type": "Object"
            },
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3580,
            "description": "Toggles the lockment of view. If the view is locked, the price of the view will not be added to the total product price.",
            "itemtype": "method",
            "name": "toggleLock",
            "params": [
                {
                    "name": "toggle",
                    "description": "The toggle state.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The toggle state.",
                "type": "Boolean"
            },
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3599,
            "description": "Removes the current elements and loads a set of new elements into the view.",
            "params": [
                {
                    "name": "elements",
                    "description": "An array containing elements.",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "A function that will be called when all elements have beed added.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "loadElements",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3618,
            "description": "Adds a set of elements into the view.",
            "params": [
                {
                    "name": "elements",
                    "description": "An array containing elements.",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "A function that will be called when all elements have beed added.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "addElements",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3738,
            "description": "Gets fired when bounding box is toggling.",
            "itemtype": "event",
            "name": "FancyProductDesignerView#boundingBoxToggle",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "currentBoundingObject",
                    "description": "- The current bounding box object.",
                    "type": "fabric.Object"
                },
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3812,
            "description": "This method needs to be called after the instance of {{#crossLink \"FancyProductDesignerView\"}}{{/crossLink}} is set.",
            "itemtype": "method",
            "name": "setup",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3827,
            "description": "Relevant options for the view when saving order data.",
            "itemtype": "property",
            "name": "relevantOptions",
            "type": "Array",
            "static": 1,
            "default": "['stageWidth',\n\t'stageHeight',\n\t'customAdds',\n\t'customImageParameters',\n\t'customTextParameters',\n\t'maxPrice',\n\t'optionalView',\n\t'designCategories',\n\t'printingBox',\n\t'output',\n\t'layouts',\n\t'usePrintingBoxAsBounding']",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/FancyProductDesignerView.js",
            "line": 3862,
            "description": "Properties to include when using the {{#crossLink \"FancyProductDesignerView/getJSON:method\"}}{{/crossLink}} or {{#crossLink \"FancyProductDesignerView/getElementJSON:method\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "propertiesToInclude",
            "type": "Array",
            "static": 1,
            "default": "['_isInitial', 'lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockScalingFlip', 'lockUniScaling', 'resizeType', 'clipTo', 'clippingRect', 'boundingBox', 'boundingBoxMode', 'selectable', 'evented', 'title', 'editable', 'cornerColor', 'cornerIconColor', 'borderColor', 'isEditable', 'hasUploadZone']",
            "class": "FancyProductDesignerView"
        },
        {
            "file": "src/js/Options.js",
            "line": 8,
            "description": "The default options. See: {{#crossLink \"Options.defaults\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "defaults",
            "type": "{Object}",
            "class": "Options"
        },
        {
            "file": "src/js/Options.js",
            "line": 17,
            "description": "The stage(canvas) width for the product designer.",
            "itemtype": "property",
            "name": "stageWidth",
            "type": "{Number}",
            "default": "\"900\"",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 26,
            "description": "The stage(canvas) height for the product designer.",
            "itemtype": "property",
            "name": "stageHeight",
            "type": "{Number}",
            "default": "\"600\"",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 35,
            "description": "Enables the editor mode, which will add a helper box underneath the product designer with some options of the current selected element.",
            "itemtype": "property",
            "name": "editorMode",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 44,
            "description": "The properties that will be displayed in the editor box when an element is selected.",
            "itemtype": "property",
            "name": "editorBoxParameters",
            "type": "{Array}",
            "default": "['left', 'top', 'angle', 'fill', 'width', 'height', 'fontSize', 'price']",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 53,
            "description": "An array containing all available fonts.<br/>Since V4.3 you can use TrueType fonts (ttf), which is also recommend. TrueType fonts are required to include the font in the PDF for Fancy Product Designer - Admin, see example.",
            "itemtype": "property",
            "name": "fonts",
            "type": "{Aarray}",
            "default": "[{name: 'Arial'}, {name: 'Lobster', url: 'google'}]",
            "example": [
                " <br />[{name: \"Lobster\", url: \"google\"}, {name: 'Custom', url: 'https://yourdomain.com/fonts/custom.ttf\"}, {name: 'Aller', url: 'path/Aller.ttf', variants: {'n7': 'path/Aller__bold.ttf','i4': 'path/Aller__italic.ttf','i7': 'path/Aller__bolditalic.ttf'}}]"
            ],
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 63,
            "description": "The directory path that contains the templates.",
            "itemtype": "property",
            "name": "templatesDirectory",
            "type": "{String}",
            "default": "'templates/'",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 72,
            "description": "To add photos from Facebook, you have to set your own Facebook API key.",
            "itemtype": "property",
            "name": "facebookAppId",
            "type": "{String}",
            "default": "''",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 81,
            "description": "To add photos from Instagram, you have to set an <a href=\"http://instagram.com/developer/\" target=\"_blank\">Instagram client ID</a>.",
            "itemtype": "property",
            "name": "instagramClientId",
            "type": "{String}",
            "default": "''",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 90,
            "description": "This URI to the html/instagram_auth.html. You have to update this option if you are using a different folder structure.",
            "itemtype": "property",
            "name": "instagramRedirectUri",
            "type": "{String}",
            "default": "''",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 99,
            "description": "The URI to the script that get the access token from Instagram. You need the enter the Instagram Secret ID.",
            "itemtype": "property",
            "name": "instagramTokenUri",
            "type": "{String}",
            "default": "''",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 108,
            "description": "The zoom step when using the UI slider to change the zoom level.",
            "itemtype": "property",
            "name": "zoomStep",
            "type": "{Number}",
            "default": "0.2",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 117,
            "description": "The maximal zoom factor. Set it to 1 to hide the zoom feature in the user interface.",
            "itemtype": "property",
            "name": "maxZoom",
            "type": "{Number}",
            "default": "3",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 126,
            "description": "Set custom names for your hexdecimal colors. key=hexcode without #, value: name of the color.",
            "itemtype": "property",
            "name": "hexNames",
            "type": "{Object}",
            "default": "{}",
            "example": [
                " hexNames: {000000: 'dark',ffffff: 'white'}"
            ],
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 136,
            "description": "The border color of the selected element.",
            "itemtype": "property",
            "name": "selectedColor",
            "type": "{String}",
            "default": "'#d5d5d5'",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 145,
            "description": "The border color of the bounding box.",
            "itemtype": "property",
            "name": "boundingBoxColor",
            "type": "{String}",
            "default": "'#005ede'",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 154,
            "description": "The border color of the element when its outside of his bounding box.",
            "itemtype": "property",
            "name": "outOfBoundaryColor",
            "type": "{String}",
            "default": "'#990000'",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 163,
            "description": "If true only the initial elements will be replaced when changing the product. Custom added elements will not be removed.",
            "itemtype": "property",
            "name": "replaceInitialElements",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 172,
            "description": "If true lazy load will be used for the images in the \"Designs\" module and \"Change Product\" module.",
            "itemtype": "property",
            "name": "lazyLoad",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 181,
            "description": "Defines the file type used for the templates. E.g. if you want to convert all template files (productdesigner.html and canvaserror.html) into PHP files, you need to change this option to 'php'.",
            "itemtype": "property",
            "name": "templatesType",
            "type": "{String}",
            "default": "'html'",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 190,
            "description": "An object that contains the settings for the AJAX post when a custom added image is added to the canvas (Uploaded Images, Facebook/Instagram Photos). This allows to send the URL of the image to a custom-built script, that returns the data URI of the image or uploads the image to your server and returns the new URL on your server. By default the URL is send to php/custom-image-handler.php. See the <a href=\"http://api.jquery.com/jquery.ajax/\" target=\"_blank\">official jQuery.ajax documentation</a> for more information. The data object has a reserved property called url, which is the image URL that will send to the script. The success function is also reserved.",
            "itemtype": "property",
            "name": "customImageAjaxSettings",
            "type": "{Object}",
            "example": [
                "\n<pre> customImageAjaxSettings: {<br />  url: 'src/php/custom-image-handler.php',<br />  data: {<br/>   saveOnServer: 1, //image is uploaded to your server <br/>   uploadsDir: '/path/to/uploads_dir', //into this directory <br/>   uploadsDirURL: 'http://yourdomain.com/uploads_dir' //and returns the new URL from this location <br />}}</pre>"
            ],
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 200,
            "description": "The URL to the custom-image-handler.php",
            "itemtype": "property",
            "name": "url",
            "type": "{String}",
            "default": "'php/custom-image-handler.php'",
            "class": "Options.defaults.customImageAjaxSettings"
        },
        {
            "file": "src/js/Options.js",
            "line": 209,
            "description": "The HTTP method to use for the request.",
            "itemtype": "property",
            "name": "method",
            "type": "{String}",
            "default": "'POST'",
            "class": "Options.defaults.customImageAjaxSettings"
        },
        {
            "file": "src/js/Options.js",
            "line": 218,
            "description": "The type of data that you're expecting back from the server.",
            "itemtype": "property",
            "name": "dataType",
            "type": "{String}",
            "default": "'json'",
            "class": "Options.defaults.customImageAjaxSettings"
        },
        {
            "file": "src/js/Options.js",
            "line": 227,
            "description": "The data object sent to the server.",
            "itemtype": "property",
            "name": "data",
            "type": "{Object}",
            "default": "{\n\t\t\t\tsaveOnServer: 0, - use integer as boolean value. 0=false, 1=true\n\t\t\t\tuploadsDir: './uploads', - if saveOnServer is 1, you need to specify the directory path where the images are saved\n\t\t\t\tuploadsDirURL: 'http://yourdomain.com/uploads' - if saveOnServer is 1, you need to specify the directory URL where the images are saved\n\t\t\t}",
            "class": "Options.defaults.customImageAjaxSettings"
        },
        {
            "file": "src/js/Options.js",
            "line": 245,
            "description": "Enable an improved resize filter, that may improve the image quality when its resized.",
            "itemtype": "property",
            "name": "improvedResizeQuality",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 254,
            "description": "Make the canvas and the elements in the canvas responsive.",
            "itemtype": "property",
            "name": "responsive",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 263,
            "description": "Hex color value defining the color for the corner icon controls.",
            "itemtype": "property",
            "name": "cornerIconColor",
            "type": "{String}",
            "default": "'#000000'",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 272,
            "description": "The URL to the JSON file or an object containing all content from the JSON file. Set to false, if you do not need it.",
            "itemtype": "property",
            "name": "langJSON",
            "type": "{String | Object | Boolean}",
            "default": "'lang/default.json'",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 281,
            "description": "The color palette when the color wheel is displayed.",
            "itemtype": "property",
            "name": "colorPickerPalette",
            "type": "{Array}",
            "default": "[]",
            "example": [
                " ['#000', '#fff']"
            ],
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 291,
            "description": "An object defining the available actions in the different zones.",
            "itemtype": "property",
            "name": "actions",
            "type": "{Object}",
            "default": "{'top': [], 'right': [], 'bottom': [], 'left': []}",
            "example": [
                " {'top': ['manage-layers'], 'right': ['info'], 'bottom': ['undo', 'redo'], 'left': []}"
            ],
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 306,
            "description": "An array defining the available modules in the main bar. Possible values: 'products', 'images', 'text', 'designs'. 'names-numbers', 'drawing' requires Fancy Product Designer Plus Add-On.",
            "itemtype": "property",
            "name": "mainBarModules",
            "type": "{Array}",
            "default": "['products', 'images', 'text', 'designs']",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 315,
            "description": "Set the initial active module.",
            "itemtype": "property",
            "name": "initialActiveModule",
            "type": "{String}",
            "default": "''",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 324,
            "description": "An object defining the maximum values for input elements in the toolbar.",
            "itemtype": "property",
            "name": "maxValues",
            "type": "{String}",
            "default": "{}",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 333,
            "description": "Set a watermark image when the user downloads/prints the product via the actions. To pass a watermark, just enter a string with an image URL.",
            "itemtype": "property",
            "name": "watermark",
            "type": "{Boolean | String}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 342,
            "description": "The number of columns used for the grid images in the images and designs module.",
            "itemtype": "property",
            "name": "gridColumns",
            "type": "{Number}",
            "default": "2",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 351,
            "description": "An object containing the currency string(use %d as placeholder for price), decimal separator and thousand separator.",
            "itemtype": "property",
            "name": "priceFormat",
            "type": "{Object}",
            "default": "{currency: '&#36;%d', decimalSep: '.', thousandSep: ','}",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 360,
            "description": "The ID of an element that will be used as container for the main bar.",
            "itemtype": "property",
            "name": "mainBarContainer",
            "type": "{Boolean | String}",
            "default": "false",
            "example": [
                " #customMainBarContainer"
            ],
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 370,
            "description": "The ID of an element that will be used to open the modal, in which the designer is included.",
            "itemtype": "property",
            "name": "modalMode",
            "type": "{Boolean | String}",
            "default": "false",
            "example": [
                " #modalButton"
            ],
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 380,
            "description": "Enable keyboard control. Use arrow keys to move and backspace key to delete selected element.",
            "itemtype": "property",
            "name": "keyboardControl",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 389,
            "description": "Deselect active element when clicking outside of the product designer.",
            "itemtype": "property",
            "name": "deselectActiveOnOutside",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 398,
            "description": "All upload zones will be always on top of all elements.",
            "itemtype": "property",
            "name": "uploadZonesTopped",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 407,
            "description": "Loads the first initial product into stage.",
            "itemtype": "property",
            "name": "loadFirstProductInStage",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 416,
            "description": "If the user leaves the page without saving the product or the getProduct() method is not, a alert window will pop up.",
            "itemtype": "property",
            "name": "unsavedProductAlert",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 425,
            "description": "If the user adds something and off-canvas panel or dialog is opened, it will be closed.",
            "itemtype": "property",
            "name": "hideDialogOnAdd",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 434,
            "description": "Set the placement of the toolbar. For smartphones the toolbar will be fixed at the bottom of the page. Possible values:'smart', 'inside-bottom', 'inside-top'",
            "itemtype": "property",
            "name": "toolbarPlacement",
            "type": "{String}",
            "default": "'smart'",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 443,
            "description": "The grid size for snap action. First value defines the width on the a-axis, the second on the y-axis.",
            "itemtype": "property",
            "name": "snapGridSize",
            "type": "{Array}",
            "default": "[50, 50]",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 452,
            "description": "An object containing <a href=\"http://fabricjs.com/docs/fabric.Canvas.html\" target=\"_blank\">options for the fabricjs canvas</a>.",
            "itemtype": "property",
            "name": "fabricCanvasOptions",
            "type": "{Object}",
            "default": "{}",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 461,
            "description": "Defines the values for the select element in the names & numbers module. Requires Fancy Product Designer Plus Add-On.",
            "itemtype": "property",
            "name": "namesNumbersDropdown",
            "type": "{Array}",
            "default": "[]",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 470,
            "description": "Sets price for any extra entry in the names & numbers module. Requires Fancy Product Designer Plus Add-On.",
            "itemtype": "property",
            "name": "namesNumbersEntryPrice",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 479,
            "description": "Sets the placement for the color selection, possible values: 'inside-tl', 'inside-tc', 'inside-tr', 'inside-bl', 'inside-bc', 'inside-br' or ID of another element(#my-color-selection). Requires Fancy Product Designer Plus Add-On.",
            "itemtype": "property",
            "name": "colorSelectionPlacement",
            "type": "{String}",
            "default": "''",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 488,
            "description": "Sets the display type for the color selection. By default the color items will be shown in a grid. You can also enable a dropdown for the color selection, but this is only working when using a custom element in colorSelectionPlacement. Possible values: grid, dropdown. Requires Fancy Product Designer Plus Add-On.",
            "itemtype": "property",
            "name": "colorSelectionDisplayType",
            "type": "{String}",
            "default": "'grid'",
            "version": "PLUS 1.1.1",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 498,
            "description": "Sets the placement for the Bulk-Add Variations Form. Just enter ID or class of another element(#my-color-selection). Requires Fancy Product Designer Plus Add-On.",
            "itemtype": "property",
            "name": "bulkVariationsPlacement",
            "type": "{String}",
            "default": "''",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 507,
            "description": "The available variations for the Bulk-Add Variations Form, e.g.: {'Size': ['XL', 'L', 'M', 'S'], 'Color': ['Red', 'Blue']}. Requires Fancy Product Designer Plus Add-On.",
            "itemtype": "property",
            "name": "bulkVariations",
            "type": "{Object}",
            "default": "{}",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 516,
            "description": "The element where the toolbar will be appended when toolbarPlacement='smart'.",
            "itemtype": "property",
            "name": "toolbarDynamicContext",
            "type": "{String}",
            "default": "'body'",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 525,
            "description": "Addtional properties for the bounding box. Can be used to set the stroke width etc.. See http://fabricjs.com/docs/fabric.Rect.html",
            "itemtype": "property",
            "name": "boundingBoxProps",
            "type": "{Object}",
            "default": "{strokeWidth: 1}",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 534,
            "description": "If the image (custom uploaded or design) is larger than the canvas, it will be scaled down to fit into the canvas.",
            "itemtype": "property",
            "name": "fitImagesInCanvas",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 543,
            "description": "Set a maximum price for all products or for specific views. -1 disables the max. price.",
            "itemtype": "property",
            "name": "maxPrice",
            "type": "{Number}",
            "default": "-1",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 552,
            "description": "The text can be edited in the canvas by double click/tap.",
            "itemtype": "property",
            "name": "inCanvasTextEditing",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 561,
            "description": "The text input in the toolbar when be opened when an editable text is selected.",
            "itemtype": "property",
            "name": "openTextInputOnSelect",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 570,
            "description": "An array of design category titles (only top-level categories) to enable particular design categories for an upload zone or for the view. An empty array will enable all design categories.",
            "itemtype": "property",
            "name": "designCategories",
            "type": "{Array}",
            "default": "[]",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 579,
            "description": "Will make the view(s) optional, so the user have to unlock it. The price for the elements in the view will be added to the total product price as soon as the view is unlocked.",
            "itemtype": "property",
            "name": "optionalView",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 588,
            "description": "When using the save/load actions, store the product in user's browser storage.",
            "itemtype": "property",
            "name": "saveActionBrowserStorage",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 597,
            "description": "An array containing the pricing rules groups. Use the <a href=\"http://fancyproductdesigner.com/addon-pricing-rules/\" target=\"_blank\" style=\"text-decoration: underline;\">online tool to generate pricing rules</a>. Requires Fancy Product Designer Pricing Add-On.",
            "itemtype": "property",
            "name": "pricingRules",
            "type": "{Array}",
            "default": "[]",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 606,
            "description": "Enables an agreement modal that needs to be confirmed before uploaded images can be used in the product designer. The text in the agreement modal can be set through the language JSON.",
            "itemtype": "property",
            "name": "uploadAgreementModal",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 615,
            "description": "An object containing the settings for the image editor.",
            "itemtype": "property",
            "name": "imageEditorSettings",
            "type": "{Object}",
            "default": "{masks: []}",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 624,
            "description": "An array containing the SVG urls for custom mask shapes. Use only one path per SVG, only the first path will be used as mask shape.",
            "itemtype": "property",
            "name": "masks",
            "type": "{Array}",
            "default": "[]",
            "class": "Options.defaults.imageEditorSettings"
        },
        {
            "file": "src/js/Options.js",
            "line": 634,
            "description": "An object containing left, top, width and height properties that represents a printing box. A printing box is a rectangle which is always visible in the canvas and represents the printing area. It is used in the ADMIN solution to create a PDF with a specific printing area.",
            "propert": "printingBox",
            "type": "{Object}",
            "default": "null",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 643,
            "description": "Open the Info modal when product designer is loaded. The Info action needs to be added to show the modal.",
            "itemtype": "property",
            "name": "autoOpenInfo",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 652,
            "description": "Create a custom guided tour by definifing an object with a key/css selector for the target element and the value for the text in the guided tour step. The first part of the key string defines the target type (module or action) followed by a a colon and the name of the module/action or just enter a custom CSS selector string, e.g. module:products, action:manage-layers or #any-element.",
            "itemtype": "property",
            "name": "guidedTour",
            "type": "{Null | Object}",
            "default": "null",
            "example": [
                " guidedTour: {\n\"module:products\": \"This is the text for first step.\",\n\"action:manage-layers\": \"This is the text for second step.\",\n\"#any-element\": \"Pointer on a custom HTML element\"\n}"
            ],
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 666,
            "description": "As soon as an element with a color link group is added, the colours of this element will be used for the color group. If false, the colours of all element in the color group will be concatenated.",
            "itemtype": "property",
            "name": "replaceColorsInColorGroup",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 675,
            "description": "Defines the image types in lowercase that can be uploaded. Currently the designer supports jpg, svg, png images and PDF files.",
            "itemtype": "property",
            "name": "allowedImageTypes",
            "type": "{Array}",
            "default": "['jpeg', 'png', 'svg', 'pdf']",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 684,
            "description": "To add photos from Pixabay, you have to set an <a href=\"https://pixabay.com/api/docs/\" target=\"_blank\">Pixabay API key</a>.",
            "itemtype": "property",
            "name": "pixabayApiKey",
            "type": "{String}",
            "default": "''",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 693,
            "description": "If you want to access high-resolution images, enable this option and you have to ask Pixabay for permission. <a href=\"https://pixabay.com/api/docs/#hires_image_search_response\" target=\"_blank\">You can easily do that here, next to the headline</a>.",
            "itemtype": "property",
            "name": "pixabayHighResImages",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 702,
            "description": "Language code of the language to be searched in. Accepted values: cs, da, de, en, es, fr, id, it, hu, nl, no, pl, pt, ro, sk, fi, sv, tr, vi, th, bg, ru, el, ja, ko, zh.",
            "itemtype": "property",
            "name": "pixabayLang",
            "type": "{String}",
            "default": "''",
            "version": "4.7.5",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 712,
            "description": "Display the internal modals (info, qr-code etc.) in the product designer instead in the whole page.",
            "itemtype": "property",
            "name": "openModalInDesigner",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 721,
            "description": "Shows the current image size in pixels in a tooltip above the image element when its selected.",
            "itemtype": "property",
            "name": "imageSizeTooltip",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 730,
            "description": "To add photos from DepositPhotos, you have to set an <a href=\"https://pixabay.com/api/docs/\" target=\"_blank\">Pixabay API key</a>.",
            "itemtype": "property",
            "name": "depositphotosApiKey",
            "type": "{String}",
            "default": "''",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 739,
            "description": "The language shortcut that defines the language for the category titles. Available language shortcuts: en,de,fr,sp,ru,it,pt,es,pl,nl,jp,cz,se,zh,tr,mx,gr,ko,br,hu,uk,ro,id,th.",
            "itemtype": "property",
            "name": "depositphotosLang",
            "type": "{String}",
            "default": "'en'",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 748,
            "description": "The price that is charged when adding an image from depositphotos.com.",
            "itemtype": "property",
            "name": "depositphotosPrice",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 757,
            "description": "Highlight objects (editable texts and upload zones) with a dashed border. To enable this just define a hexadecimal color value.",
            "itemtype": "property",
            "name": "highlightEditableObjects",
            "type": "{String}",
            "default": "''",
            "version": "3.7.2",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 767,
            "description": "When an element is replaced, apply fill(color) from replaced element to added element.",
            "itemtype": "property",
            "name": "applyFillWhenReplacing",
            "type": "{Boolean}",
            "default": "true",
            "version": "3.7.2",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 777,
            "description": "An array containing layouts. A layout is technically a view that will replace all elements in a view when selected.",
            "itemtype": "property",
            "name": "layouts",
            "type": "{Array}",
            "default": "[]",
            "version": "4.7.0",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 787,
            "description": "Options for the Dynamic Views modul. Requires Fancy Product Designer Plus Add-On.",
            "itemtype": "property",
            "name": "dynamicViewsOptions",
            "type": "{Object}",
            "default": "{}",
            "version": "4.7.0",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 797,
            "description": "Set the length unit that you would like to set the canvas site: 'mm', 'cm', 'inch'",
            "itemtype": "property",
            "name": "unit",
            "type": "{String}",
            "default": "'mm'",
            "class": "Options.defaults.dynamicViewsOptions"
        },
        {
            "file": "src/js/Options.js",
            "line": 806,
            "description": "An array will all available formats when adding a new view.",
            "itemtype": "property",
            "name": "formats",
            "type": "{Array}",
            "default": "[]",
            "example": [
                " [\n\t[100, 100],\n\t[500, 500],\n\t[1000, 1000]\n]"
            ],
            "class": "Options.defaults.dynamicViewsOptions"
        },
        {
            "file": "src/js/Options.js",
            "line": 820,
            "description": "Charge price per area in centimeter. For example if you want to charge a price of 1 per 10cm2, you have to enter 0.1.",
            "itemtype": "property",
            "name": "pricePerArea",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults.dynamicViewsOptions"
        },
        {
            "file": "src/js/Options.js",
            "line": 829,
            "description": "Minimum width that the user can enter as view width.",
            "itemtype": "property",
            "name": "minWidth",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults.dynamicViewsOptions"
        },
        {
            "file": "src/js/Options.js",
            "line": 838,
            "description": "Minimum height that the user can enter as view height.",
            "itemtype": "property",
            "name": "minHeight",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults.dynamicViewsOptions"
        },
        {
            "file": "src/js/Options.js",
            "line": 847,
            "description": "Maximum width that the user can enter as view width.",
            "itemtype": "property",
            "name": "maxWidth",
            "type": "{Number}",
            "default": "10000",
            "class": "Options.defaults.dynamicViewsOptions"
        },
        {
            "file": "src/js/Options.js",
            "line": 856,
            "description": "Maximum height that the user can enter as view height.",
            "itemtype": "property",
            "name": "maxHeight",
            "type": "{Number}",
            "default": "10000",
            "class": "Options.defaults.dynamicViewsOptions"
        },
        {
            "file": "src/js/Options.js",
            "line": 866,
            "description": "Emojis in text elements will be removed when changing or adding text.",
            "itemtype": "property",
            "name": "disableTextEmojis",
            "type": "{Boolean}",
            "default": "false",
            "version": "4.7.4",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 876,
            "description": "Enable guide lines to align the selected object to the edges of the other objects.",
            "itemtype": "property",
            "name": "smartGuides",
            "type": "{Boolean}",
            "default": "false",
            "version": "4.7.7",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 886,
            "description": "Set the toolbar theme. Possible values: white, dark.",
            "itemtype": "property",
            "name": "toolbarTheme",
            "type": "{String}",
            "default": "'white'",
            "version": "4.7.7",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 896,
            "description": "If a printing box has been defined for a view and the element has no individual bounding box, the printing box will be used as bounding box.",
            "itemtype": "property",
            "name": "usePrintingBoxAsBounding",
            "type": "{Boolean}",
            "default": "false",
            "version": "4.8.0",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 906,
            "description": "An object defining the printing area when exporting the product as SVG. {top: Number, left: Number, width: Number, height: Number, visibility: Boolean}. The visibility property shows the printing box to the customers.",
            "itemtype": "property",
            "name": "printingBox",
            "type": "{Object}",
            "default": "{}",
            "version": "4.7.0",
            "example": [
                " {top: 100, left: 100, width: 400, height: 500, visibility: true}"
            ],
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 917,
            "description": "A JSON object or URL to a JSON file that stores all initial products. These products will be displayed in the Products module.",
            "itemtype": "property",
            "name": "productsJSON",
            "type": "{String}",
            "default": "null",
            "version": "4.9.0",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 927,
            "description": "A JSON object or URL to a JSON file that stores all designs. These designs will be displayed in the Designs module.",
            "itemtype": "property",
            "name": "designsJSON",
            "type": "{String}",
            "default": "null",
            "version": "4.9.0",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 937,
            "description": "When the customizationRequired argument in the getProduct is set to true, you can control if any view needs to be customized or all. Possible values: any, all.",
            "itemtype": "property",
            "name": "customizationRequiredRule",
            "type": "{String}",
            "default": "'any'",
            "version": "4.9.4",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 947,
            "description": "Display the notification that the product is going to be changed when clicking on a product item in the Products module.",
            "itemtype": "property",
            "name": "swapProductConfirmation",
            "type": "{Boolean}",
            "default": "false",
            "version": "4.9.5",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 957,
            "description": "The position of the textarea in the toolbar. Possible values: sub, top (Only possible when toolbarPlacement = smart).",
            "itemtype": "property",
            "name": "toolbarTextareaPosition",
            "type": "{String}",
            "default": "'sub'",
            "version": "4.9.6",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 967,
            "description": "The width of a textbox can set via the \"Texts\" module or changed via the corner controls of the selected textbox.",
            "itemtype": "property",
            "name": "setTextboxWidth",
            "type": "{Boolean}",
            "default": "false",
            "version": "5.0.1",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 977,
            "description": "Define additional properties that will be applied to all text elements in the same textLinkGroup. E.g.: ['fontFamily', 'fontSize', 'fontStyle']",
            "itemtype": "property",
            "name": "textLinkGroupProps",
            "type": "{Array}",
            "default": "[]",
            "version": "5.0.3",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 987,
            "description": "Text Templates that will appear in the Text module.",
            "itemtype": "property",
            "name": "textTemplates",
            "type": "{Array}",
            "default": "[]",
            "example": [
                " [{text: 'Hello World', properties: {fontFamily: 'Arial', textSize: 35}}]"
            ],
            "version": "5.1.0",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 998,
            "description": "Multiple objects can be selected and moved at the same time.",
            "itemtype": "property",
            "name": "multiSelection",
            "type": "{Boolean}",
            "default": "false",
            "version": "5.1.0",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1008,
            "description": "The UI theme that you would like to use. Choose between 'flat' or 'doyle'.",
            "itemtype": "property",
            "name": "uiTheme",
            "type": "{String}",
            "default": "'flat'",
            "version": "5.1.0",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1018,
            "description": "The maximum canvas height related to the window height. A number between 0 and 1, e.g. 0.8 will set a maximum canvas height of 80% of the window height. A value of 1 will disable a calculation of a max. height.",
            "itemtype": "property",
            "name": "maxCanvasHeight",
            "type": "{Number}",
            "default": "1",
            "version": "5.1.1",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1028,
            "description": "Set the behaviour for mobile gestures. Possible values:  <ul><li>'none': No behaviour</li><li>'pinchPanCanvas': Zoom in/out and pan canvas</li><li> 'pinchImageScale': Scale selected image with pinch</li></ul> .",
            "itemtype": "property",
            "name": "mobileGesturesBehaviour",
            "type": "{String}",
            "default": "'none'",
            "version": "5.1.3",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1038,
            "description": "Enable image quality ratings for uploaded images. Therefore you can define low, mid and high quality steps. The object receives low, mid and high keys. The values of these keys are arrays, where the first entry defines the width and the second entry defines the height.",
            "itemtype": "property",
            "name": "imageQualityRatings",
            "type": "{Object}",
            "default": "null",
            "example": [
                " {low: [100, 200], mid: [500, 600], high: [1000, 1200]}"
            ],
            "version": "5.1.4",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1049,
            "description": "Displays the paths of a SVG in the advanced image editor.",
            "itemtype": "property",
            "name": "splitMultiSVG",
            "type": "{Boolean}",
            "default": "false",
            "version": "5.1.4",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1059,
            "description": "Set corner controls style: Basic (Rescale and Rotate), Advanced (Rescale, Rotate, Delete, Duplicate).",
            "itemtype": "property",
            "name": "cornerControlsStyle",
            "type": "{Boolean}",
            "default": "false",
            "version": "5.1.4",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1069,
            "description": "The filename when the user downloads the product design as image or PDF.",
            "itemtype": "property",
            "name": "downloadFilename",
            "type": "{String}",
            "default": "'Product'",
            "version": "5.1.5",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1079,
            "description": "Fill all upload zones with the first uploaded images.",
            "itemtype": "property",
            "name": "autoFillUploadZones",
            "type": "{Boolean}",
            "default": "false",
            "version": "5.2.7",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1089,
            "description": "Drag & Drop images from the images and designs module into upload zones or on canvas.",
            "itemtype": "property",
            "name": "dragDropImagesToUploadZones",
            "type": "{Boolean}",
            "default": "false",
            "version": "5.2.7",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1099,
            "description": "An object containing the default element parameters in addition to the <a href=\"http://fabricjs.com/docs/fabric.Object.html\" target=\"_blank\">default Fabric Object properties</a>. See <a href=\"./Options.defaults.elementParameters.html\">Options.defaults.elementParameters</a>.",
            "itemtype": "property",
            "name": "elementParameters",
            "type": "{Object}",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1108,
            "description": "Allows to set the z-index of an element, -1 means it will be added on the stack of layers",
            "itemtype": "property",
            "name": "z",
            "type": "{Number}",
            "default": "-1",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1117,
            "description": "The price for the element.",
            "itemtype": "property",
            "name": "price",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1126,
            "description": "<ul><li>If false, no colorization for the element is possible.</li><li>One hexadecimal color will enable the colorpicker</li><li>Mulitple hexadecimal colors separated by commmas will show a range of colors the user can choose from.</li></ul>",
            "itemtype": "property",
            "name": "colors",
            "type": "{Boolean | String}",
            "default": "false",
            "example": [
                " colors: \"#000000\" => Colorpicker, colors: \"#000000,#ffffff\" => Range of colors"
            ],
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1136,
            "description": "If true the user can remove the element.",
            "itemtype": "property",
            "name": "removable",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1145,
            "description": "If true the user can drag the element.",
            "itemtype": "property",
            "name": "draggable",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1154,
            "description": "If true the user can rotate the element.",
            "itemtype": "property",
            "name": "rotatable",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1163,
            "description": "If true the user can resize the element.",
            "itemtype": "property",
            "name": "resizable",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1172,
            "description": "If true the user can copy non-initial elements. Copyable property is enabled for designs and custom added elements automatically.",
            "itemtype": "property",
            "name": "copyable",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1181,
            "description": "If true the user can change the z-position the element.",
            "itemtype": "property",
            "name": "zChangeable",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1190,
            "description": "Defines a bounding box (printing area) for the element.<ul>If false no bounding box</li><li>The title of an element in the same view, then the boundary of the target element will be used as bounding box.</li><li>An object with x,y,width and height defines the bounding box</li></ul>",
            "itemtype": "property",
            "name": "boundingBox",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1199,
            "description": "Set the mode for the bounding box. Possible values: 'none', 'clipping', 'limitModify', 'inside'",
            "itemtype": "property",
            "name": "boundingBoxMode",
            "type": "{String}",
            "default": "'clipping'",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1208,
            "description": "Centers the element in the canvas or when it has a bounding box in the bounding box.",
            "itemtype": "property",
            "name": "autoCenter",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1217,
            "description": "Replaces an element with the same type and replace value.",
            "itemtype": "property",
            "name": "replace",
            "type": "{String}",
            "default": "''",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1226,
            "description": "If a replace value is set, you can decide if the element replaces the elements with the same replace value in all views or only in the current showing view.",
            "itemtype": "property",
            "name": "replaceInAllViews",
            "type": "{Boolean}",
            "default": "''",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1235,
            "description": "Selects the element when its added to stage.",
            "itemtype": "property",
            "name": "autoSelect",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1244,
            "description": "Sets the element always on top.",
            "itemtype": "property",
            "name": "topped",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1253,
            "description": "You can define different prices when using a range of colors, set through the colors option.",
            "itemtype": "property",
            "name": "colorPrices",
            "type": "{Object}",
            "default": "{}",
            "example": [
                " colorPrices: {\"000000\": 2, \"ffffff: \"3.5\"}"
            ],
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1263,
            "description": "Include the element in a color link group. So elements with the same color link group are changing to same color as soon as one element in the group is changing the color.",
            "itemtype": "property",
            "name": "colorLinkGroup",
            "type": "{Boolean | String}",
            "default": "false",
            "example": [
                " 'my-color-group'"
            ],
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1273,
            "description": "An array of URLs to pattern image - onyl for SVG images or text elements.",
            "itemtype": "property",
            "name": "patterns",
            "type": "{Array}",
            "default": "[]",
            "example": [
                " patterns: ['patterns/pattern_1.png', 'patterns/pattern_2.png',]"
            ],
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1283,
            "description": "An unique identifier for the element.",
            "itemtype": "property",
            "name": "sku",
            "type": "{String}",
            "default": "''",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1292,
            "description": "When true the element is not exported in SVG. If you are going to use one of the data URL methods (e.g. <a href=\"./FancyProductDesigner.html#method_getProductDataURL\">getProductDataURL()</a>), you need to set onlyExportable=true in the options, so the element is not exported in the data URL.",
            "itemtype": "property",
            "name": "excludeFromExport",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1301,
            "description": "Shows the element colors in color selection panel. Requires Fancy Product Designer Plus Add-On.",
            "itemtype": "property",
            "name": "showInColorSelection",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1310,
            "description": "By the default the element will be locked and needs to be unlocked by the user via the \"Manage Layers\" module.",
            "itemtype": "property",
            "name": "locked",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1319,
            "description": "Allow user to unlock proportional scaling in the toolbar. After that the user scale the element unproportional via toolbar or element boundary controls.",
            "itemtype": "property",
            "name": "uniScalingUnlockable",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1328,
            "description": "The layer is fixed and will stay on the canvas when changing the product.",
            "itemtype": "property",
            "name": "fixed",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.elementParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1352,
            "description": "An object containing the default text element parameters in addition to the <a href=\"http://fabricjs.com/docs/fabric.IText.html\" target=\"_blank\">default Fabric IText properties</a>. See <a href=\"./Options.defaults.textParameters.html\">Options.defaults.textParameters</a>. The properties in the object will merge with the properties in the elementParameters.",
            "itemtype": "property",
            "name": "textParameters",
            "type": "{Object}",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1360,
            "description": "The maximal allowed characters. 0 means unlimited characters.",
            "itemtype": "property",
            "name": "maxLength",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1369,
            "description": "If true the text will be curved.",
            "itemtype": "property",
            "name": "curved",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1378,
            "description": "If true the the user can switch between curved and normal text.",
            "itemtype": "property",
            "name": "curvable",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1387,
            "description": "The letter spacing when the text is curved.",
            "itemtype": "property",
            "name": "curveSpacing",
            "type": "{Number}",
            "default": "10",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1396,
            "description": "The radius when the text is curved.",
            "itemtype": "property",
            "name": "curveRadius",
            "type": "{Number}",
            "default": "80",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1405,
            "description": "Reverses the curved text.",
            "itemtype": "property",
            "name": "curveReverse",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1414,
            "description": "The maximal allowed lines. 0 means unlimited characters.",
            "itemtype": "property",
            "name": "maxLines",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1423,
            "description": "Enables the text element as a text box. A text box has a fixed width and not be resized.",
            "itemtype": "property",
            "name": "textBox",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1432,
            "description": "Enables the text element as a placeholder for the Names & Numbers module. You can enable this parameter for one text element in a view.",
            "itemtype": "property",
            "name": "textPlaceholder",
            "type": "{Boolean | Array}",
            "default": "false",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1441,
            "description": "Enables the text element as a number placeholder for the Names & Numbers module. You can enable this parameter for one text element in a view. If you want to define a range of allowed numbers, just use an array. The first value in the array defines the minimum value, the second value defines the maximum value, e.g. [0, 10].",
            "itemtype": "property",
            "name": "numberPlaceholder",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1450,
            "description": "Addtional space between letters.",
            "itemtype": "property",
            "name": "letterSpacing",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1459,
            "description": "The price will be charged first after the text has been edited.",
            "itemtype": "property",
            "name": "chargeAfterEditing",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1468,
            "description": "The minimum font size.",
            "itemtype": "property",
            "name": "minFontSize",
            "type": "{Number}",
            "default": "1",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1477,
            "description": "Set the text transform - none, lowercase, uppercase.",
            "itemtype": "property",
            "name": "textTransform",
            "type": "{String}",
            "default": "'none'",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1486,
            "description": "Set a width for the text, so the text will be scaled up/down to the given area.",
            "itemtype": "property",
            "name": "widthFontSize",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1495,
            "description": "The maximum font size. Using a value higher than 200 can cause performance issues with text boxes.",
            "itemtype": "property",
            "name": "maxFontSize",
            "type": "{Number}",
            "default": "1",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1504,
            "description": "The color of the shadow.",
            "itemtype": "property",
            "name": "shadowColor",
            "type": "{String}",
            "default": "''",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1513,
            "description": "Shadow Blur.",
            "itemtype": "property",
            "name": "shadowBlur",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1522,
            "description": "Shadow horizontal offset.",
            "itemtype": "property",
            "name": "shadowOffsetX",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1531,
            "description": "Shadow vertical offset.",
            "itemtype": "property",
            "name": "shadowOffsetY",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1540,
            "description": "Link the text of different text elements, changing the text of one element will also change the text of text elements with the same textLinkGroup value.",
            "itemtype": "property",
            "name": "textLinkGroup",
            "type": "{String}",
            "default": "\"\"",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1549,
            "description": "The colors for the stroke. If empty, the color wheel will be displayed.",
            "itemtype": "property",
            "name": "strokeColors",
            "type": "{Array}",
            "default": "[]",
            "class": "Options.defaults.textParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1571,
            "description": "An object containing the default image element parameters in addition to the <a href=\"http://fabricjs.com/docs/fabric.Image.html\" target=\"_blank\">default Fabric Image properties</a>. See <a href=\"./Options.defaults.imageParameters.html\">Options.defaults.imageParameters</a>. The properties in the object will merge with the properties in the elementParameters.",
            "itemtype": "property",
            "name": "imageParameters",
            "type": "{Object}",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1579,
            "description": "If true the image will be used as upload zone. That means the image is a clickable area in which the user can add different media types.",
            "itemtype": "property",
            "name": "uploadZone",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.imageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1588,
            "description": "Sets a filter on the image. Possible values: 'grayscale', 'sepia', 'sepia2' or any filter name from FPDFilters class.",
            "itemtype": "property",
            "name": "filter",
            "type": "{Boolean}",
            "default": "null",
            "class": "Options.defaults.imageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1597,
            "description": "Set the scale mode when image is added into an upload zone or resizeToW/resizeToH properties are set. Possible values: 'fit', 'cover'",
            "itemtype": "property",
            "name": "scaleMode",
            "type": "{String}",
            "default": "'fit'",
            "class": "Options.defaults.imageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1606,
            "description": "Resizes the uploaded image to this width. 0 means it will not be resized.",
            "itemtype": "property",
            "name": "resizeToW",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults.imageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1615,
            "description": "Resizes the uploaded image to this height. 0 means it will not be resized.",
            "itemtype": "property",
            "name": "resizeToH",
            "type": "{Number}",
            "default": "0",
            "class": "Options.defaults.imageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1624,
            "description": "Enables advanced editing, the user can crop, set filters and manipulate the color of the image. This works only for png or jpeg images. If the original image has been edited via the image editor, the original image will be replaced by a PNG with 72DPI!",
            "itemtype": "property",
            "name": "advancedEditing",
            "type": "{Boolean}",
            "default": "false",
            "class": "Options.defaults.imageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1633,
            "description": "If true the upload zone can be moved by the user.",
            "itemtype": "property",
            "name": "uploadZoneMovable",
            "type": "{Boolean}",
            "default": "false\nversion 4.8.2",
            "class": "Options.defaults.imageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1643,
            "description": "If true the upload zone can be removed by the user.",
            "itemtype": "property",
            "name": "uploadZoneRemovable",
            "type": "{Boolean}",
            "default": "false\nversion 5.0.0",
            "class": "Options.defaults.imageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1656,
            "description": "An object containing the default parameters for custom added images. See <a href=\"./Options.defaults.customImageParameters.html\">Options.defaults.customImageParameters</a>. The properties in the object will merge with the properties in the elementParameters and imageParameters.",
            "itemtype": "property",
            "name": "customImageParameters",
            "type": "{Object}",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1664,
            "description": "The minimum upload size width.",
            "itemtype": "property",
            "name": "minW",
            "type": "{Number}",
            "default": "100",
            "class": "Options.defaults.customImageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1673,
            "description": "The minimum upload size height.",
            "itemtype": "property",
            "name": "minH",
            "type": "{Number}",
            "default": "100",
            "class": "Options.defaults.customImageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1682,
            "description": "The maximum upload size width.",
            "itemtype": "property",
            "name": "maxW",
            "type": "{Number}",
            "default": "1500",
            "class": "Options.defaults.customImageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1691,
            "description": "The maximum upload size height.",
            "itemtype": "property",
            "name": "maxH",
            "type": "{Number}",
            "default": "1500",
            "class": "Options.defaults.customImageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1700,
            "description": "The minimum allowed DPI for uploaded images. Works only with JPEG images.",
            "itemtype": "property",
            "name": "minDPI",
            "type": "{Number}",
            "default": "72",
            "class": "Options.defaults.customImageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1709,
            "description": "The maxiumum image size in MB.",
            "itemtype": "property",
            "name": "maxSize",
            "type": "{Number}",
            "default": "10",
            "class": "Options.defaults.customImageParameters"
        },
        {
            "file": "src/js/Options.js",
            "line": 1719,
            "description": "An object containing additional parameters for custom added text.The properties in the object will merge with the properties in the elementParameters and textParameters.",
            "itemtype": "property",
            "name": "customTextParameters",
            "type": "{Object}",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1727,
            "description": "An object containing the supported media types the user can add in the product designer.",
            "itemtype": "property",
            "name": "customAdds",
            "type": "{Object}",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1735,
            "description": "If true the user can add images from the designs library.",
            "itemtype": "property",
            "name": "designs",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults.customAdds"
        },
        {
            "file": "src/js/Options.js",
            "line": 1744,
            "description": "If true the user can add an own image.",
            "itemtype": "property",
            "name": "uploads",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults.customAdds"
        },
        {
            "file": "src/js/Options.js",
            "line": 1753,
            "description": "If true the user can add own text.",
            "itemtype": "property",
            "name": "texts",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults.customAdds"
        },
        {
            "file": "src/js/Options.js",
            "line": 1762,
            "description": "If true the user can add own drawings.",
            "itemtype": "property",
            "name": "drawing",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults.customAdds"
        },
        {
            "file": "src/js/Options.js",
            "line": 1772,
            "description": "An object containing the properties (parameters) for the QR code.",
            "itemtype": "property",
            "name": "qrCodeProps",
            "type": "{Object}",
            "class": "Options.defaults"
        },
        {
            "file": "src/js/Options.js",
            "line": 1780,
            "itemtype": "property",
            "name": "autoCenter",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults.qrCodeProps"
        },
        {
            "file": "src/js/Options.js",
            "line": 1787,
            "itemtype": "property",
            "name": "draggable",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults.qrCodeProps"
        },
        {
            "file": "src/js/Options.js",
            "line": 1794,
            "itemtype": "property",
            "name": "removable",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults.qrCodeProps"
        },
        {
            "file": "src/js/Options.js",
            "line": 1801,
            "itemtype": "property",
            "name": "resizable",
            "type": "{Boolean}",
            "default": "true",
            "class": "Options.defaults.qrCodeProps"
        },
        {
            "file": "src/js/Options.js",
            "line": 1811,
            "description": "Merges the default options with custom options.",
            "itemtype": "method",
            "name": "merge",
            "params": [
                {
                    "name": "defaults",
                    "description": "The default object.",
                    "type": "Object"
                },
                {
                    "name": "merge",
                    "description": "The merged object, that will be merged into the defaults.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "The new options object.",
                "type": "Object"
            },
            "class": "Options"
        },
        {
            "file": "src/js/Options.js",
            "line": 1842,
            "description": "Returns all element parameter keys.",
            "itemtype": "method",
            "name": "getParameterKeys",
            "return": {
                "description": "An array containing all element parameter keys.",
                "type": "Array"
            },
            "class": "Options"
        },
        {
            "file": "src/js/Util.js",
            "line": 10,
            "description": "Checks if browser is IE and return version number.",
            "itemtype": "method",
            "name": "isIE",
            "return": {
                "description": "Returns true if browser is IE.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 24,
            "description": "Resets the key names of the deprecated keys.",
            "itemtype": "method",
            "name": "rekeyDeprecatedKeys",
            "params": [
                {
                    "name": "object",
                    "description": "An object containing element parameters.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the edited object.",
                "type": "Object"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 71,
            "description": "Writes a message in the console.",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "message",
                    "description": "The text that will be displayed in the console.",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The output type - info, error, warn or log.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "log"
                }
            ],
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 98,
            "description": "Checks if a string is an URL.",
            "itemtype": "method",
            "name": "isUrl",
            "params": [
                {
                    "name": "s",
                    "description": "The string.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if string is an URL.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 113,
            "description": "Removes an element from an array by value.",
            "itemtype": "method",
            "name": "removeFromArray",
            "params": [
                {
                    "name": "array",
                    "description": "The target array.",
                    "type": "Array"
                },
                {
                    "name": "element",
                    "description": "The element value.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the edited array.",
                "type": "Array"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 133,
            "description": "Checks if a string is XML formatted.",
            "itemtype": "method",
            "name": "isXML",
            "params": [
                {
                    "name": "string",
                    "description": "The target string.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if string is XML formatted.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 153,
            "description": "Checks if an image can be colorized and returns the image type",
            "itemtype": "method",
            "name": "elementIsColorizable",
            "params": [
                {
                    "name": "element",
                    "description": "The target element.",
                    "type": "fabric.Object"
                }
            ],
            "return": {
                "description": "Returns the element type(text, dataurl, png or svg) or false if the element can not be colorized.",
                "type": "String | Boolean"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 212,
            "description": "Returns a simpler type of a fabric object.",
            "itemtype": "method",
            "name": "getType",
            "params": [
                {
                    "name": "fabricType",
                    "description": "The fabricjs type.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This could be image or text.",
                "type": "String"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 231,
            "description": "Looks for the .fpd-tooltip classes and adds a nice tooltip to these elements (tooltipster).",
            "itemtype": "method",
            "name": "updateTooltip",
            "params": [
                {
                    "name": "$container",
                    "description": "The container to look in. If not set, the whole document will be searched.",
                    "type": "JQuery",
                    "optional": true
                }
            ],
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 261,
            "description": "Makes an unique array.",
            "itemtype": "method",
            "name": "arrayUnique",
            "params": [
                {
                    "name": "array",
                    "description": "The target array.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the edited array.",
                "type": "Array"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 282,
            "description": "Creates a nice scrollbar for an element.",
            "itemtype": "method",
            "name": "createScrollbar",
            "params": [
                {
                    "name": "target",
                    "description": "The target element.",
                    "type": "JQuery"
                }
            ],
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 320,
            "description": "Checks if a value is not empty. 0 is allowed.",
            "itemtype": "method",
            "name": "notEmpty",
            "params": [
                {
                    "name": "value",
                    "description": "The target value.",
                    "type": "Number | String"
                }
            ],
            "return": {
                "description": "Returns true if not empty.",
                "type": "Array"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 337,
            "description": "Opens the modal box with an own message.",
            "itemtype": "method",
            "name": "showModal",
            "params": [
                {
                    "name": "message",
                    "description": "The message you would like to display in the modal box.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns a jQuery object containing the modal.",
                "type": "JQuery"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 387,
            "description": "Shows a message in the snackbar.",
            "itemtype": "method",
            "name": "showMessage",
            "params": [
                {
                    "name": "text",
                    "description": "The text for the message.",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 429,
            "description": "Adds a preloader icon to loading picture and loads the image.",
            "itemtype": "method",
            "name": "loadGridImage",
            "params": [
                {
                    "name": "picture",
                    "description": "The image container.",
                    "type": "JQuery"
                },
                {
                    "name": "source",
                    "description": "The image URL.",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 460,
            "description": "Refreshs the items using lazy load.",
            "itemtype": "method",
            "name": "refreshLazyLoad",
            "params": [
                {
                    "name": "container",
                    "description": "The container.",
                    "type": "JQuery"
                },
                {
                    "name": "loadByCounter",
                    "description": "If true 15 images will be loaded at once. If false all images will be loaded in the container.",
                    "type": "Boolean"
                }
            ],
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 492,
            "description": "Parses the fabricjs options to a FPD options object.",
            "itemtype": "method",
            "name": "parseFabricObjectToFPDElement",
            "params": [
                {
                    "name": "object",
                    "description": "The target fabricjs object.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the FPD object.",
                "type": "Object"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 528,
            "description": "If pop-up blocker is enabled, the user will get a notification modal.",
            "itemtype": "method",
            "name": "popupBlockerAlert",
            "params": [
                {
                    "name": "popup",
                    "description": "The target popup window.",
                    "type": "Window"
                }
            ],
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 543,
            "description": "Returns the scale value calculated with the passed image dimensions and the defined \"resize-to\" dimensions.",
            "itemtype": "method",
            "name": "getScalingByDimesions",
            "params": [
                {
                    "name": "imgW",
                    "description": "The width of the image.",
                    "type": "Number"
                },
                {
                    "name": "imgH",
                    "description": "The height of the image.",
                    "type": "Number"
                },
                {
                    "name": "resizeToW",
                    "description": "The maximum width for the image.",
                    "type": "Number"
                },
                {
                    "name": "resizeToH",
                    "description": "The maximum height for the image.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The scale value to resize an image to a desired dimension.",
                "type": "Number"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 592,
            "description": "Checks if the browser local storage is available.",
            "itemtype": "method",
            "name": "localStorageAvailable",
            "return": {
                "description": "Returns true if local storage is available.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 617,
            "description": "Checks if the dimensions of an image is within the allowed range set in the customImageParameters of the view options.",
            "itemtype": "method",
            "name": "checkImageDimensions",
            "params": [
                {
                    "name": "fpdInstance",
                    "description": "Instance of FancyProductDesigner.",
                    "type": "FancyProductDesigner"
                },
                {
                    "name": "imageW",
                    "description": "The image width.",
                    "type": "Number"
                },
                {
                    "name": "imageH",
                    "description": "The image height.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns true if image dimension is within allowed range(minW, minH, maxW, maxH).",
                "type": "Array"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 668,
            "description": "Checks if an element has a color selection.",
            "itemtype": "method",
            "name": "elementHasColorSelection",
            "params": [
                {
                    "name": "element",
                    "description": "The target element.",
                    "type": "fabric.Object"
                }
            ],
            "return": {
                "description": "Returns true if element has colors.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 682,
            "description": "Returns the available colors of an element.",
            "itemtype": "method",
            "name": "elementAvailableColors",
            "params": [
                {
                    "name": "element",
                    "description": "The target element.",
                    "type": "fabric.Object"
                },
                {
                    "name": "fpdInstance",
                    "description": "Instance of FancyProductDesigner.",
                    "type": "FancyProductDesigner"
                }
            ],
            "return": {
                "description": "Available colors.",
                "type": "Array"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 721,
            "description": "Changes a single path color by index.",
            "itemtype": "method",
            "name": "changePathColor",
            "params": [
                {
                    "name": "element",
                    "description": "The target element.",
                    "type": "fabric.Object"
                },
                {
                    "name": "index",
                    "description": "The path index.",
                    "type": "Number"
                },
                {
                    "name": "color",
                    "description": "Hexadecimal color value.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "All colors used in the SVG.",
                "type": "Array"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 750,
            "description": "Checks if a string is a valid hexadecimal color value.",
            "itemtype": "method",
            "name": "isHex",
            "params": [
                {
                    "name": "value",
                    "description": "The target value.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if value is a valid hexadecimal color.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 762,
            "description": "Adds a thousand separator and returns it.",
            "itemtype": "method",
            "name": "addThousandSep",
            "params": [
                {
                    "name": "n",
                    "description": "A numeric value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns a string.",
                "type": "String"
            },
            "static": 1,
            "class": "FPDUtil"
        },
        {
            "file": "src/js/Util.js",
            "line": 1152,
            "description": "Changes the DPI of a base64 image.",
            "itemtype": "method",
            "name": "changeBase64DPI",
            "params": [
                {
                    "name": "string",
                    "description": "A base64 data uri representing the image(png or jpeg).",
                    "type": "DataURI"
                },
                {
                    "name": "number",
                    "description": "The target DPI.",
                    "type": "Dpi"
                }
            ],
            "return": {
                "description": "Returns the base64 image with the new DPI.",
                "type": "String"
            },
            "static": 1,
            "class": "FPDUtil"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/FabricPrototypes.js:277"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/FabricPrototypes.js:377"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/FabricPrototypes.js:638"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/FabricPrototypes.js:708"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/FabricPrototypes.js:813"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/FabricPrototypes.js:961"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/FancyProductDesigner.js:4278"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/FancyProductDesigner.js:4379"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/FancyProductDesignerView.js:298"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:488"
        },
        {
            "message": "unknown tag: propert",
            "line": " src/js/Options.js:634"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:702"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:757"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:767"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:777"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:787"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:866"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:876"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:886"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:896"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:906"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:917"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:927"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:937"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:947"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:957"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:967"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:977"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:987"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:998"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:1008"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:1018"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:1028"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:1038"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:1049"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:1059"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:1069"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:1079"
        },
        {
            "message": "unknown tag: version",
            "line": " src/js/Options.js:1089"
        },
        {
            "message": "Missing item type\nReturns Snapping to Objects Control Points Point",
            "line": " src/js/FabricPrototypes.js:277"
        },
        {
            "message": "Missing item type\nReturns Snapping to Objects Bounding Rectangles Point",
            "line": " src/js/FabricPrototypes.js:377"
        },
        {
            "message": "Missing item type\ngenerate SnappingObject using in snapping cache",
            "line": " src/js/FabricPrototypes.js:638"
        },
        {
            "message": "Missing item type\nDraw Helper lines For Snapping function",
            "line": " src/js/FabricPrototypes.js:662"
        },
        {
            "message": "Missing item type\nCorrect Object moving on \"object:moving\" event",
            "line": " src/js/FabricPrototypes.js:708"
        },
        {
            "message": "Missing item type",
            "line": " src/js/FabricPrototypes.js:813"
        },
        {
            "message": "Missing item type\nmodified to use with `offsetCorner` property",
            "line": " src/js/FabricPrototypes.js:961"
        },
        {
            "message": "Missing item type\nSets the coordinates of the draggable boxes in the corners of\nthe image used to scale/rotate it.\nEdited : modified to use with `offsetCorner` property",
            "line": " src/js/FabricPrototypes.js:1079"
        },
        {
            "message": "Missing item type\nmodified to use with `offsetCorner` property",
            "line": " src/js/FabricPrototypes.js:1159"
        },
        {
            "message": "Missing item type\nmodified to use with `offsetCorner` property",
            "line": " src/js/FancyProductDesignerView.js:298"
        },
        {
            "message": "Missing item type\nSets the coordinates of the draggable boxes in the corners of\nthe image used to scale/rotate it.\nEdited : modified to use with `offsetCorner` property",
            "line": " src/js/FancyProductDesignerView.js:416"
        },
        {
            "message": "Missing item type\nmodified to use with `offsetCorner` property",
            "line": " src/js/FancyProductDesignerView.js:496"
        },
        {
            "message": "Missing item type\nAn object containing left, top, width and height properties that represents a printing box. A printing box is a rectangle which is always visible in the canvas and represents the printing area. It is used in the ADMIN solution to create a PDF with a specific printing area.",
            "line": " src/js/Options.js:634"
        }
    ]
}